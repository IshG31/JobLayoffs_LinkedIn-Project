(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    360382,       6590]
NotebookOptionsPosition[    358166,       6546]
NotebookOutlinePosition[    358633,       6564]
CellTagsIndexPosition[    358590,       6561]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
{\"TN\" \[Rule] Ratio[{8, 1}], \"KY\" \[Rule] Ratio[{2}], \"United States\" \
\[Rule] Ratio[{97, 12}], \"NY\" \[Rule] Ratio[{15, 5}], \"FL\" \[Rule] \
Ratio[{15, 6}], \"TX\" \[Rule] Ratio[{31, 10}], \"CT\" \[Rule] Ratio[{4, 2}], \
\"IL\" \[Rule] Ratio[{12, 4}]} I have a list of this form. Does the word \
ratio affect the plotting of a bar graph for this list? if so, how do i \
remove it?

\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 CellChangeTimes->{{3.910098802170831*^9, 3.910098819503477*^9}, {
   3.9100990471241393`*^9, 3.9100990799786167`*^9}, {3.910099138987612*^9, 
   3.9100991448557644`*^9}, {3.9100991779255877`*^9, 3.910099187970913*^9}, {
   3.9100994424945574`*^9, 3.9100995235899982`*^9}, {3.9100996099676013`*^9, 
   3.9100996159084473`*^9}, {3.910099705589304*^9, 3.910099719091137*^9}, {
   3.9100997785812263`*^9, 3.910099781677143*^9}, 3.910101176885095*^9, {
   3.910121907940028*^9, 3.9101219485618663`*^9}, {3.9101220284717703`*^9, 
   3.910122074313144*^9}, {3.910122453316428*^9, 3.910122486381091*^9}, {
   3.910122769364216*^9, 3.9101228018233123`*^9}, {3.9101232080754547`*^9, 
   3.9101232300004783`*^9}, {3.9101233982994113`*^9, 
   3.9101234337132263`*^9}, {3.910123571870953*^9, 3.9101236251695347`*^9}, {
   3.9101240067781706`*^9, 3.910124012140768*^9}, {3.910124409195172*^9, 
   3.9101244176563616`*^9}, {3.910124699322429*^9, 3.9101246999151416`*^9}, 
   3.9101248483794556`*^9, 3.910309056980097*^9, {3.910309254840866*^9, 
   3.910309257678844*^9}, {3.9103093012920904`*^9, 3.910309329371194*^9}, {
   3.9103094636979666`*^9, 3.9103094733640556`*^9}, {3.910310430943554*^9, 
   3.9103104356566415`*^9}, {3.910389038345051*^9, 3.9103891157973647`*^9}, {
   3.9103892653538823`*^9, 3.910389287670417*^9}, {3.9103895303909354`*^9, 
   3.9103895839300833`*^9}, {3.910389721171648*^9, 3.9103897591333494`*^9}, {
   3.910389876521598*^9, 3.9103899243488007`*^9}, {3.9103903154957333`*^9, 
   3.910390342937927*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"b3b86040-d4b2-48b0-a01c-40d0b7ab1104"],

Cell[TextData[{
 "The word \"Ratio\" does not affect the plotting of a bar graph. It is \
simply a representation of rational numbers in the form of a ratio of \
integers.\n\nTo remove the word \"Ratio\" from your list, you can use the ",
 Cell[BoxData[
  TemplateBox[{"Normal", "paclet:ref/Normal"},
   "TextRefLink"]],ExpressionUUID->"98a75384-d2ee-41e9-9b22-3fc8c8d6165b"],
 " function to convert each ratio to its decimal representation. Here's an \
example: \n",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     BoxData[
      DynamicModuleBox[{$CellContext`attached$$}, 
       TagBox[
        Cell[
         BoxData[
          RowBox[{
            RowBox[{
              RowBox[{"data", "=", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"\"TN\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "1"}], "}"}], "]"}]}], ",", 
                    RowBox[{"\"KY\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", "2", "}"}], "]"}]}], ",", 
                    RowBox[{"\"United States\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"97", ",", "12"}], "}"}], "]"}]}], ",", "\n", 
                    "  ", 
                    RowBox[{"\"NY\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"15", ",", "5"}], "}"}], "]"}]}], ",", 
                    RowBox[{"\"FL\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"15", ",", "6"}], "}"}], "]"}]}], ",", 
                    RowBox[{"\"TX\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"31", ",", "10"}], "}"}], "]"}]}], ",", "\n", 
                    "  ", 
                    RowBox[{"\"CT\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2"}], "}"}], "]"}]}], ",", 
                    RowBox[{"\"IL\"", "->", 
                    RowBox[{"Ratio", "[", 
                    RowBox[{"{", 
                    RowBox[{"12", ",", "4"}], "}"}], "]"}]}]}], "}"}]}], 
              ";"}], "\n", "\n", 
            RowBox[{"decimals", "=", 
              RowBox[{"Normal", "[", "data", "]"}]}]}]], "ChatCode", "Input", 
         Background -> GrayLevel[1]], 
        EventHandlerTag[{"MouseEntered" :> (Quiet[
             Needs["Wolfram`Chatbook`" -> None]]; 
           Symbol["Wolfram`Chatbook`ChatbookAction"]["AttachCodeButtons", 
             Dynamic[$CellContext`attached$$], 
             EvaluationCell[], 
             "data = {\"TN\" -> Ratio[{8, 1}], \"KY\" -> Ratio[{2}], \"United \
States\" -> Ratio[{97, 12}], \n  \"NY\" -> Ratio[{15, 5}], \"FL\" -> \
Ratio[{15, 6}], \"TX\" -> Ratio[{31, 10}], \n  \"CT\" -> Ratio[{4, 2}], \
\"IL\" -> Ratio[{12, 4}]};\n\ndecimals = Normal[data]", "Wolfram"]), Method -> 
          "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
       DynamicModuleValues :> {}, 
       TaggingRules -> <|
        "CellToStringType" -> "InlineInteractiveCodeCell", "CodeLanguage" -> 
         "Wolfram"|>, UnsavedVariables :> {$CellContext`attached$$}]]]},
   "ChatCodeBlockTemplate"]], "ChatCodeBlock",
  Background->None,ExpressionUUID->"37fb0b4d-c1e0-43f4-b7ce-9277956e781f"],
 "\nThis will give you a new list where each ratio is represented as a \
decimal number: \n",
 Cell[BoxData[
  TemplateBox[{
    Cell["{\"TN\" -> 8., \"KY\" -> 2., \"United States\" -> 8.08333, \"NY\" \
-> 3., \n \"FL\" -> 2.5, \"TX\" -> 3.1, \"CT\" -> 2., \"IL\" -> 3.}", 
     "ChatPreformatted", Background -> GrayLevel[1], 
     TaggingRules -> <|
      "CellToStringType" -> "InlineCodeCell", "CodeLanguage" -> ""|>]},
   "ChatCodeBlockTemplate"]], "ChatCodeBlock",
  Background->None,ExpressionUUID->"104ea8ff-18bd-4fd9-8896-b04a330a24ad"],
 "\nYou can then use this list to create a bar graph without the word \"Ratio\
\"."
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      PaneBox[
       TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
       FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
       "ShrinkToFit", Alignment -> {Center, Center}]}, 
     "AssistantIconTabbed"]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "The word \"Ratio\" does not affect the plotting of a bar graph. It is \
simply a representation of rational numbers in the form of a ratio of \
integers.\n\nTo remove the word \"Ratio\" from your list, you can use the \
`Normal` function to convert each ratio to its decimal representation. Here's \
an example:\n\n```wolfram\ndata = {\"TN\" -> Ratio[{8, 1}], \"KY\" -> \
Ratio[{2}], \"United States\" -> Ratio[{97, 12}], \n  \"NY\" -> Ratio[{15, \
5}], \"FL\" -> Ratio[{15, 6}], \"TX\" -> Ratio[{31, 10}], \n  \"CT\" -> \
Ratio[{4, 2}], \"IL\" -> Ratio[{12, 4}]};\n\ndecimals = Normal[data]\n```\n\n\
This will give you a new list where each ratio is represented as a decimal \
number:\n\n```\n{\"TN\" -> 8., \"KY\" -> 2., \"United States\" -> 8.08333, \
\"NY\" -> 3., \n \"FL\" -> 2.5, \"TX\" -> 3.1, \"CT\" -> 2., \"IL\" -> 3.}\n\
```\n\nYou can then use this list to create a bar graph without the word \
\"Ratio\".", "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJyFV91yHEcVLoId0IL4K6gid8fCVcFhNY6liNhKBdciW4kqq5/\
Kbspx2U6pd6Z3t1FP99Ddo9WS8jtwwQ1c8ha8AFc8B7e8At/pnv0Zryl0Ie32+f/Od063er/\
cHXR63isfhMml3+\
rVwZYiqJzP8fnYOnz1t4auljj6vfDywtmyCi3VO0dTEY6sCfImHEmtoQJnXpnJcW3yoKz5n+\
oX1oen10LXgtXeqv7zdXUnq834P2ONJ05dS3NmgxxZe+VvHwvtkfNPWfY5CrRu3pdmEqZH7+\
H0ydyIUuVrNa47/Mmxk3+spcnnF9IIHebub3/ln3883h386MTkui5k47Nlt3Uqbob2ShrfOt4+\
lW4iTwGJmOBXg+\
btU1tIPdieVGF3PzvYDbUb2d3Bj1GjR2i5GXp7MLWzU2VUqf4ki1aIXwyCk6jITM7rUNXhVIapbav8\
YCjLSjqBONKN48+/4fT20FrdzveH8eipESONMAskbw1tdXH0HXx4IoLo4cP3FyWNv+\
tv9YFH7x1IndVy8K6f+yDL3cH3cu6cCYM/bz+\
3NQknSdBU6mpca3pm9diJkvrCTGo4ItFwMRDaIws6AkS0IGjICC4c/cGOSHkKlgpLYSppbLW2M9R+\
2Ol8QOfjsXSbrn09QaaRXTQCjwuyhionr5WtPSkD0HwG88+\
RG43VDUnnrItHT28qLZRJJ1Q2RZNP0WuPcLUppOMkC08zMI5mqJlmzprJugcbm4PcWaUUcxpJAkDjm\
oeFK1JG3qBJiglQRNcxgwTBKtxMhSlZfHUwqlTugRwZKQtZZPRsqrSkOdD2lcyV0GALHG9A0o06uTC\
xH8mnMPPkMet0fkWfSQPCaDoxPrg6jSZD/\
GwKwTWCz7kf4GsFQawkoEokQyNt8yuyY5wVCORrQAeMSIUUJ0ydlOhDfgXGXcGCZWmwYpV60bYZQpG\
oKq1ypuNh5/LyciHssHM+4JScChKQwjcQdLx+uNMJ2L4Yyq9jjGUiCFKmVAqwRzjyamL8Id29+\
WaPfkPzb/buwuvJ6cX5l8Pe2fBOq2Y0lqMJ0vjDAC0KIfBjzR+jzmurS73+\
s97zAUmfi0ouURDR0Gvhpxk4IsoKFdJJAGoeLCklvbz76FH26IA4MjqjytTYscVCCUyYxuPLSw798i\
4YbcEfPb+D7PvKXFGhnMyD5rZuDkVh87oEU+P2pdG8was1VOTnULg5pBdajKR+\
9etK5FqGw9qpexlhewLwlHln6wN6MeQ2LZWcHN+PJ/eicBn4HPVcKzlbKk5qVcj7C/\
lCnKxOeDhpENNYGgTsKwdy34/\
SJLzXcBOUxA7ADHH6m5tgXo6w31bNSd2MjBBM3jYqGihmdG4AYdw3as3S2BAZHqdlI9AgzDGIn3Flc\
CLj6HwhZRVNQBAGLRG8suArUILCVxikcXMPglno5wROebMjLHaqKHisKr5iixrcg8kTGxPh5QnOTbQ\
dwfBaAB249CmCCu/7qGUk383CzWF4EXGiEum4zf2wBIoHp0wXCoxOeUcYOVuKp+\
Iaoyx5TgssoEi0PsrDCksL4srYGW4SeMzRtPGYChF4KVjKpxJD08Z7uckWzcxxswWuv9I2+\
C5HIVulTe7rfMoWkZopUy0nktcw0ijFVdNXKbyKy3JtU69uq1u8VNfuqn+98+3O8GyH/\
vOXv9OXnNWLbx926cHrV13a+eJ563wvHn5lwKACDUdhviV/9DEMk9JZ2/\
LBQZcOouC4vyH4bRQMv24J9h/\
A14dRcjRsST7qUopx8oarvS599PrVazpJXeKNhXsEBIo8xhopM9BH+jjyM+\
sKcmxJApdoni4cRj3CDyteWI5AyGrKxskLu3xMaoyGdgkvFB4ThREs7TWvuscrnLeW9/\
sa2P98d7iIvRPT3oEDmcj6/\
9PIeF0iiThNc0j4hcgPqIZN0I4V8SyZuhyh93F844ZzZfKWasZHhZQm8c7tDO2ihPBmemM8QROzufT\
VNQoWReXLM35S6svlHDPvUC6WWgATwdgUkO97rPkClzTU38g8w0vEyfeZ06sFy5fdLI1pB0Mk6FNKT\
N393VuJujp+K09X4hVNO5SYupK1ido+X/F0db6iKftipq5kLaKuuWp4+kmn06DhUVqC8QUX+\
ipe850h822mtKYJXvsReBF3UaQ1Fh2el2sAQ3kJKspOy71BO5EhQdpZgvgwWyG3l70VsYfZhw/39/\
e7S5j2M650Ac5edrBCZD970F1CEP01de9nr1NFzxvuBN50iUDNSEXS8OqTrbHjhwOekRuszPBu7/\
dPm3+mrBts8+O5txq4TvNaH4qJ3zoxwIor+y/Cu9cO", 
   "PageData" -> <|
    "Pages" -> <|
      1 -> "OEM6eJwlkFFOAzEMRFXEB8eYA1R7CfipxB/\
lAG7W6VrNxhA7tHsxzoezfDqemTdOPtjLmR/+Rk75YM/vYv7x+3RyGPNqKHJj+\
MKNcScDVbwu5BfVGyi5aJ1wXhjcmjasbEZXhvXrlc0tjOTD0+ut6r3CnLwbks7/cVyT9uqRPk/\
4rFmb90rOZTviLr5od6wa7KShejgCIkO20mAfIQ4xzJKzpF4crpg58lape20k6sbQvA97ywmnjE17r\
Cq+mv5IlNkh4SQpNiCpUJO8DV1D4+8e5xxxilKlYFasGy7xNHhkFn82lNMfwGB5Ig==", 2 -> 
       "OEM6eJytVv9P21YQnyHhi2EdtNqm/\
bQTqrROCixBQqpatVISWEGCquOlnSaExIt9Tiwcv8jvGRKh/GP763b3bIeEBArbpCi27+\
7dfe7Lu7vA0SstHJh9aWSwqUvHoTbi95YCL0FpECT4Km1HCG2ZQCeR/\
S6EMZguwp8qChLZg2MZd1LZwQoMVQqejCHVaCUCR5eaGEX0XG6ogTWxoNda2OtHpJtI9JlZXGnIpNm\
ViREv+tKL0LxJMPhtTFxjiKcYHIfxpYggSGPPhCregUNM8BcNZBQHktSyYWlAd9W1BvoDo6AfKWPxx\
GmvjQmoAEzYQw0ovS5ow252pU+uXskoReZXSaMPtTfgBotf9cHJfJjnbVlv7A9j2Qu9E+\
Wn0aS43vwQqbaMLqQxhAP9ly9J8VJLdlioNKvL0Uun6pqZy2ODBWVhhrKYB7bk01nhvJtgLeUs50Y4\
rlgAmOCt3qvIuZlDXN0SNnz1LeFUHntooVYlaXrsCWdkf5VZII8y23iKWWfPWt2t/\
lerzSdZfZ35ultYde3/W/viPiqFS5FsY6Snk/\
ig0cWtKmOkZ23rHnOlmYvnnE2wyzNoStMFdTYPyzziYj2KbKwpAuf2Ny92axbDcebowvb7/\
9Nw7SHD65lh7GDsW8u34T4XK8Q0TeWjKB/F/dRwkk7pGmu3Ib3LTqLS2Cedqx8SOTzGK4yaDn1+\
d3CFsTmkDhJhQve58ID7Bp/ex0gO0RfrJ4o65UFsqIf5xHzeVL0+qzwY9BPUmhocaSv/kYbIiSh/\
RPR1AUFs5v33gjG2lbq80KWPKsagzF6KYa+\
tIvHzjFDxUrcNVGzWbfdhHxupMSrW3HLynjWvRX2jnx1wm5R8nFuU+\
NvhxMA7uHEBbsYNoQI3tWoFanujUWWC0WDGXgV2q9P0JtNfk/\
zuaOSO3rpulgVWS8VcAapkphbVesY2z84oxaTq/LwCE/UD2+9hgl27ZWdZZn6m/\
Vws5wEaZ3bpBE1X+cL9lCD1eBNe4Zj37JPU2iZX76vrWK/WU6N6FAlvLLJ+K/\
K5r0utJMU7adcvpibCFx45msJalEiuh+qmE8Yd+8Ea6lorL7RRH5fABse/\
pYRJSLI17KP46SiOwhiPuKakx+A5s3aSFIfWmVLM7En/p0BufI61vEL/\
i0xC2WYM948t8X1xTRqR8i6L0Si+nSLPuztZxYrn7hGvFKEuhngFSHpFmKGdmPnNX2gdiS4kyHeD4/\
vvRvoOtHgzCRNtACPskSbmZudo0SEXecG5x34IYWY3M0F5JKys19LQU/\
RaaCVJCVYfkY0MY0qSlfPIdQOBSjKrGcJXOb5fd1y39bTdaap3/\
jCxPk3SpzaoQ1B9riTGSC3I5y1J99ELg+Ed78gHnV8WUNneN9iWg1DncXw8yulG++\
MMzJwxhfPLV3DmwDiU/GmuFa+pmkL4V76K9pRfCNs46weS+4rV03WmnNAmS0V1Hds+kmV4QtPU+\
WJcsIZKlu9ZNXeAWpD/ANIbvMs=", 3 -> 
       "OEM6eJztWUtv20YQLhXJSZQ0r6IFeurGDuJDldSU/\
FKCpJBlN5Fjq6lXthsYBrIWVzZhiqtyV1YEQ7f+r/\
6u3jr7ICXFZCUqLZBDAANaLofz2vmG89Eti99o0A9ikwjSusuzOy4XeKPBUJP5FzQQSJxRJHoMeXCD\
I9cXTG05lLsBdVCLBW0iCqjPuqhJfNTlVN1vWTxbpZ4Hv9c32AelPsNvNWi74xFBYQsutbXrrwLW7W\
z08YMOaXpUPAto66dw75Z0bo+2dlz/HOcQ8Z00qm+9of0D4nXpLung70bUj+6PmVhEra7fFC7z+\
VP0mgZ0kaMz1ovicxhyxTOUb12b6ISlnYhzN8fvbfZ90nabu8zpeqPi/\
P4rj50Q7z0RgjTPqPPoESiea5BTKZS9qsvic3usJ2/\
ORQbDncyVnWth0rkAN7mNrRcxd63Lkc3FRCXZ+\
UZ9HmeevMTWOrYKsRJv3hmJYrzE3fl93xVQSVg5pIUz5bUkfXWjL2OvJIn8sjNRpPG7ESnZSSLVhnF\
8OUmiFtlJiO3hfJ320DsWnKOqK/pol4qAdZjnCqikSkCJsVBO9KESupmYj93NSW5W9oxEYqiHlUmO/\
PraSKwmSeyH6Solnty2kUg+2+qEhGbncfXfywmCqU1y5CDMqg0iA2w9x1Y+DWiK/\
xFoMvbSRNQkVHA8aoqJ+\
lKhJjG1IWqS0R6BJrFOQtAk1dq0mEmMI8KMPRkziRIRZhJRNT1mMnaikhA0GTsRmyFqVLF+\
OmwSvY1gk3hyIWysIWrGgROJOvBeGsdINu6FbB1dfXgqHI4hLdpciHc8Vjiz8FGqslcgfqQ0HqtY4e\
9xgnw4qEwIJpTPbjPXjxUeeSUXRtw4lpdZSBtX62N8o3pGRJU5FOdqfqcrZJ72YIbg+\
Q3SPD8Fd3wHtN98FZD+Dr2gXtWCy7tbF9QXr2F+\
8mgAw0TokBxa5NOb1CN96uDbuwxGuC1fwOjjwM0HVdbuSJVbHzoB5RwGI9CW+\
63rUhlerk6pw0MX8P1D5rUC0n4vfTxh7Pw9z9aZT1s5GS/ut0+Yh3+\
4IhQuKmrwwvcravSRMW50hYBRTM47ZmCKm4++\
4ne2LqCqiHxczkf4z5xJJnqBLmXDRU9eovUCko1VLouwHO+\
gcre8Btt1LWGvwBp6YrSG5ifXJRvW0ObkehmWNSMiNU7qXMqGfLyiVUlz0ItCVdB0lCpYHlYiYWgjc\
rkqPdZmS9LUtloqh6tDD3A1Cg8AHQofaG12afA8bwprNC/20jAxK7GJKS4lJKY4TMz6MC+\
rw7yUp0zLyjAt9kha1oZpWY5Ni708zIttDxNjl+\
IzUx5mZnWYGZmYvOxakJaRDnV0uVBAlwvwuMna0cLxYIAeF5BB/\
ZFE85EptUjquCCV8ONjfN2UeoTROYj+jDk4/zagQBWEe0Gje3feEs4VTPkm6/\
n8ZqUrGJArtxmJ3B6K7Hd4thF06UcA5t+MEQsVCQeAhGA3eqADnLr+qbqQGiqcs6ar8BOB+\
Z5EUoNhEYBko9+h+Pua77k+rcnuQJrSeYlRRUjCh27LnR3in3bJKR2Nf8zJe/s+\
JxfUOSCBS06kD8nsB38bNrwNjzXPQ4aFvx7bjuuCuvfgXL7xfxHSnyO2iFwuua+\
DgB9L6x3FgnVBoJO+vHIDBCdDgVeCP35alpyeyv5lxXonAgINFWg7opBh42wir++dwYtA++\
oGXCDq0TaUn1QYBajCUtRcbdEmg+WIIFEfDxBrqfsXqiRRK2Dt8Y8LT/PqoOAt0/\
UElByC2G9g0Vf02AwVmUYN/6jV9VzPQ2dQRdo75a+i6bxDm27Lpc5nStNT8oXY+\
UWTiOnnHTWxa8Khx5mpn9RcJIUlOVip8TyloSuUJsU0pz4XaP6TOrx6qvA0gdI/\
qU1JijWDqeIMpiRVS2FKfQZRVZLakqR8KcpjWRlancFQLWX2dCGWU1uagoGmiLc8Ixw0kU1zhBoDkv\
WmNiUJceoznMWQ5NUpDOmqXJ7B0GGq5JlTSl8rmuWnMLSqD2mWkPbTAa2kLdmztMTtVJZM4ZVmsVSd\
AdOzdUScypQ1a/fQX1LSntNMDfEgXYOwtaXomAZfPiVM8ynh78ylYsrABIHi2kuDAazkUAQ/\
wAxX9PX47AI78ltC0QjXlbAkzrYRh0kg3CnqHXhhw4/8urCuN+C9Cj9Ab1f1dU0/\
AibLRuuEt5R0IvIPXiZSPThlr+kd6Plav7mG1iz1F9Cyvj6sGA3GHDQ6+\
AHSbBuBfeUg8GzbNg5tyw1pomQ2qqHLYZS4atJmlAJWtA4T5IEyKsk7qBh84c+\
fA39ezO9QgYDhnfush9yWIlmKeBG/j/6A/Kh/lz78B/3+Db4=", 4 -> 
       "OEM6eJylV21vEzkQvg1JS5cCLaf7cJ9uSBF8IIDaUl4FUpqUkqPNQZ1SUBWp7q6TrLKxo7\
W3bVT1j9wvvJ9xM85umpIsASFFitd+\
PH5mPG9uOfp6Q5yZKje8VdD5nUAbVm0o8JQ8EZGBgYojaAcnQkKIaxBIo8B0BPhCB5HwoaWiHjclAo\
LHJcRa2PWWo/MVEYb4P7+pzuwBOX2jIXr9kBuBU/g5PG9+O1Jxf3PA7vS5FwrzKhKtJ+\
ncDaK3J1o7geyyT9CKpWcCJYGHSrbhNDAd0KongPt+QAs8BBNxqYe8cEI/\
hvciEg80dNTpiKavIDCvwG1dm0nTGdKcplBBL1UHkvcCb1f5cTgO18vboTrm4RE3hnsd4d+\
7h4LnGrxNoPykLEfP7anTZDE5MJ3JTcxcS2yX93Evc96MLc0lS845c1yWAxhbe5QtqNioF1nu0Vvmv\
GBOaSriw9cEsTYdcbu4LwODTsEM2k4PwbmXz7Pk1RN5udWNLMi7nXHIpEJj9L8kyPXVLGGVRsL/\
aRaiNjouQ8W7xbo4ha8q6kIlMAPYFSZSfRUGBp2qHAmenPByBttKOWWbaZ3d6iy25b0EkanxQXmMz1\
TEP+8TxLMsxH5qtfUZOtX/ToDZF16ZYd58kVW+72OoU22Mz1TE59S4q+\
vE17lgzms7cKc57ShdCL86EUzzCerGBzH4zMNY7PI+cw4nzVD4iaB1zicnJ+\
Of3WQmCmR7T2Aq8gSe+kO7Cu+CiM5AjivMaU630QwG3w3ohaL9AjTyr4RIKmazaC/\
oJ4iy3EqGc9iFh8zZsCLxd3+qy6amGhWeaaZNU2vpu1eainKHd9Xg3V+\
4KBvITcu6af21ya5XOtxUlC9YoSb7sSEKe1hptLvJvW4b+UsfZS9sR3ywI05EWHHw8/YWFmzznks/\
FBGWnFFJwdJGu6si5APhs8VdhfV6SxoskD4u3qmoXp9Ebp31I6E1lk+\
UVvgUB4I0KNSF8HVKgS0fqLAV8d4RcTxWqnuk83UlRatA2rJB71iF7K8JUDoo20LOlsu2QJKOm7ExW\
LCpKiZldVoV/U3f2jrBULTVnaoo++8aXRW8gXMXgOoYPHoLL0pABYuGazi86sg0+/\
I5TteHiNUNHGOtScZWzBf7tb6KK1g4aPwUh7UERDJn+bk9xQrDdG+\
F0ZGY11NhmMCtMBwelBM4UEqm4TNiPTx43QrB/EoflnblkgWrjJTE1DiEA+\
VAi1h3L1677jc5Dk01ls8OUfj5lVxzaF3zcKVZgvMplhslgB+\
0wSjSL0jgCjJdWYOHsHFxAfdJsyQMD+kWS3AZSWM0Vptwv+\
k22XziTqM4mMMjO8pn7sdIYNNmsFUdrd36yLW2oaCr6lTqhXJsFHWF3giyeAnZ7+t8I4rFN0Gif7/\
S4lmjaXTCNKASORhlbTIgfZCEstbKC6yPjgJmiby1oRIFB33B/\
qzJMJCiRhHIPSJPcWBbw3TTIs3scNmOeVuM63+F5NK+1PxE+J95FPBj4pDdh7I/0qSyGSqvm/\
a67OaV6WmZZhjf7N+c2+gEGh8JvsAWPAyBlvvDdwG51/Fg+\
Aag6wPs6FE7UC0QSAC09QW0KPbs0iecvOzYsSnPemI8htqDE9wTakXNPs6PtfzR0G97dI+\
En4h3Omq2rx5zjXvwdWGfPeKMo2XEY9fdEQaQb1fiCyJo2UeEFMQsjpBoBOhDaGouPXH3f54tEco=\
", 5 -> "OEM6eJylV21v2zYQrlwnbZ2uTTpswD6NTYr2w5IOjvuWvqGOkrVuE68LlWRFEKC0RdlCZ\
FIQqThCkt+5/\
ZR93B0luXYi1SsGGDB1fHT3HHnPifQsdd3hJ3qDaebNqeqWrzTdcCTpSnHMI00SGUckACuRHlGaaa6\
IlkT3OXG58iPuEk9Gg2UEki4TJFbczHqWqto8COD/\
2ro8MQEqas7hgzAAL2CCxzTetbeRjMP1hN4JWTfg+nnEvV9z2xzS2+Heli+\
O6BbxYtHVvhRIoocQEywj1knwyY9IxFXIAXfMyTELYq4eEqfPxSTLb2A494Ene+hom4X0xzGW4/\
YJpoagjphQuDyEs24/4+sLmGFExR2zrENf97/\
kQAQbcMKES3ytYBMizEQK1xe9USbveMQfKAARfsKAK39Oat7VqblYaS5FWc+o+\
Y0EIvvdbenGwThcLbwNZIcFn5nWkAN3790Dx7MO6yGoetmXpWZ35DCbzALmlsoly9VsgWfTHaTWq4L\
JysuzMeuDUifVRae9SCsrr6n1jFrLhYgPnzLEajHi9uKu8DVUNTWEUnBl7WmZv3bmr1J/\
XAb5bWsqxPkzgzTqZRDbyYg/\
KkO0RnFKcru72OZD8klGR8T2dUK2uY5kKANfQy01I86yCGulHJo5zdL12N6YRrO5kyFKU91vTiPy+\
7sM8aQMsZsvV6N0595niPK9tacsaHWR2l8vJ0imNY3IXr6q9QatnAHyBbVq8CsCuyCxQpFc1t1k07I\
O/pMOrdMi/S2VbFUh2loCMLwDK3JufvepdUitNwUMR41/\
gt2lnrD8VerVsbhFbqwDszuH5me4XLf7TNvS5XSmJcJYo9MdaHuqts66R9ilhQuObryNWLLFj3lgW/\
B4e/OYC/0OenPAI+h/o/4GfRbf3uABS7hLb25L+\
LpsCg1t2oXJO7YchOhy8ySEbq7g4wXeZv6IfY5pzLQ5d1VOgS7sy8CL2OAzcuxIefRZVdtScG8GU6P\
JoCMD+vMlUD5omo8jXWiabo05rsdaS/gKQYvOenxRS7+ibm3i94Xh69jS6V+\
V7KP6irw8w8ZKVl6TZ8sEOygOV2E42SrRuvYUzO0UUX8MY2h+\
ozF0ORw36jCGdobjRzBsZRD0OK1BmRj4ejN1heGg5eSuoLcYVzDcb47A0C1w+\
AQZp2EbGOq9GRrC9hcG1B6lB9LNwXupt3rj7PWLWg1VCOsypq+D0yUIerq0TJZWz8/J/\
cM3WWkfpKsI9oOD1cNDmKHXst0bld0s5NmXLq19jDh8sPHYMpq79ZEpZSpPbcihUDeasZYD2KbuCHL\
zC2Q3VFUnivmFmlTfT3zeDWkFe57Xb+YHiroHBw3zgB6aSsmub0piVJ/\
zWByOpDoCpJOEnP7UEoEveAsLnpkzF5adORbkL91EyxYTvZj1+Hj+EyTnd4Vix9zdY5HPOsih/\
AxCf8g1vB7I7lF+zqHfTZiLhJ3Kif5Sc/q+gtNXEJAenhPxZGjOrTII5BDPWzLW0By+\
7XCVHYjoP5XTUxQN1ARo5tn5OQxQOfAHlbWaPk/KByyonrWn6WTbgFE39cepBaR0wQKCgj/\
UU6OeWkBW8AdSeJQ+t9J3IGY9CzpNYUgDWGTumiYA0GpktEBsEwFAcRgA/KfP+81JD6A9+\
APpPclyNgRBUo2Mznt8hgB52vZFwtSeXDVQ5YSHPROxDoY6WM6hQqEEQEl47oaCMT14ansv1ECzslJ\
Q77fSes+LfOVCdV/536W5UNvE20J+QfAFAfB1qhNzMM/OABWnRf+28JqmmS/UpRtEavH8CDzwgA+\
gO5hrBSMFtw64TZjLBdybQs6wJvXQ7468KA5h3NzNw1qt5Rm59EGt4DQhElARGZguhnwHvnCXCdxMG\
Fyz4KoEU+RIyKFh0HoAkutweDsME7wlQfdCSujRiyN0dfdfMe6ARA==", 6 -> 
       "OEM6eJy1WG1v2zYQrhw7bd0uTVuswD6VaIrui/\
Ni560vaAFHcVtvjpGFbrPBMFpGoh0hMmmIVBIjyM/dzxiwI2m9uJHipdvyJUfqeHzu+\
NyR574l7nToudwlkvQfi2LLExKfdTgaUIkI8mGIzjx5jOQxRYwMKeJ9LQtJJBWI+\
JwNEo2ASI9HKqfED0FFkhPKUD/gQ2OuighzjViroDEPkUMYCgVFfUsUber78P/2Dj/\
XmAriXocORz7sBlMwNBDv/UrHn5X9PTLCT0bE8al8HdD+anr+\
nvLsgPZbHjvBDSQ58iQFiODEKQ00xhM6XtY40Yh4gYig90GWGmNFo4W5G0Ms2URQgRdT4MzMFKxfFK\
y+Z/ZADg8CKkacuR6E1QDzmAk4dfgkbivovceI74+/O3xzKjwLKWRXwvVW4XKI74Rqbepw+\
zxAlDjHhgEr5fJHGtCfgQkM0XMCW9HXqNyfmwnFMlCyQJfE4u4YyOY5e9wN/bS6ePjB50fE/\
0qkBBDUff4cDM93yEApFa/assT8AT9TH+fjDaOZwpWZuejsVJir2Hqb+\
laMqFcXgjueCgbDVjel8TTXXvFZ+49nuLD8Dlub2KpkarxvTTS2sjUePPvEgL8uwjr1jHKhWsuzV4/\
sVfM0Or9HRtbyVPbqEyO527QbszR27VlA8EyNdqSxnqfRjNzdyNOwO7OQ7s/\
01q5HIcuFutecBfWwnpx0D1tvsFX+56ys/R+\
svIYBMS1z3MmmZS3XXkzL3BhHtMxPlZiVuWcdszL3mG7Aynzu29enbIqVL2eyMteXmJW5hIpYaW3PJ\
OWrWaTUFWXCymliRrrzcEWFvpzm4Vwey7K4mr6kp7h6dU1+\
NlgXGZOFpZzjLCyBW6sZYKKk6pq14Pkltl6AkfgS6OHCauZKc51nOZANzvqizX45oMTX2+\
RZnsc8kDtjBarYImplD9+\
xj4m0uUtxqclGoVSROYDLUZR3iHMyCHjIXDB190NAxi16Sn3bguGDxill8iO8YXwawC0ZbaFuY7V6l\
/pkTF18f4/DE6LB4H1EXfj4yObDkTLZOB/BcQuoKmCt9FvoUXUWpTalrogg4IeH3O8HZPhVYTzi/\
OSrKLY5o/2Scg6Ph0fcx0+vKEVC3dFV62Fd3+nKx51QSs6EusgnL4Gsi/+WWGioN5Iueurix3/\
N6TNDb1GqHHZVmUPL79BmBalypsQtEKfrlpqtwoNUFSgtgwiVSItrIEPNUbLSgOISiVBFImWciG0jr\
oPYNNY2QIRMj5btJ8ZsI1bVOsjSaN2hmd7qvSlrgua4pKFNfFrP9Km2lvhUS3zaTFzaSFyqZrpUS1z\
aSlx6mbi0kbi0nri0nXj0KvGoWgOXyqaEgFOpUtC9WIJNl2qr2uHuUrV3iV5U9Iu32kOrq0jnW/\
fiSwXpFLrUkyZVuipNevj2hGNxcszvUXnMXVzeDyg8PqV3SuNvC/tECJ0fYpefMXG3Hko+\
hPg6scr9ROXTSBQ7QUi/\
yRzxeOqpqn0RwMwoyyZ2IPUG8KTXA2UhdZZxFi0qCnc4lgFodsYjin9qMt9jtKnSkjgKvEoO/\
cSNFt1XMy3CBiEZ0LT/UyAXPzFBTqn7mQQeOVIY8t/T+\
Meo0uz43DmJ3uz4h6nprPJjkh6Xyh3VQhXEHSzH+\
vUeXxmFThM6njPP99ERhf5SwOHRSTMIrZfpwaDPkcRjqgOKO03Te05aMdOJ3KzNmLQG+E/\
r4uKbLKmgtZWtywq6UGmiBpt6AHlQQdUVLWM79aGdHkAGJAPIAW1M/W3rGeC/\
mlnXf2amnlpwmB4007tDmlZQzewOuZ58eN9KfWgksl3XcDe3qxvrl5dAJjgtID20a0BpqYv6zPsik6\
71wnIGNRcMNSM+Ln9DxFv/mkWPym2uG08iUVP1t+5/33w/Sn65GKkgBQzdqHP9rlv/\
SRQBE8E4MvEFf01QNs2vBT5ARTyUkBBjxDhbZuGQBp5jEkNM/2bhfp9P171F/\
o0LL5QLKu912HXmH41Tvy+YX41W/gZwKp2Q", 7 -> 
       "OEM6eJztV91OG0cUzjo2IYYSaJVIvcoIofbGUBx+\
LvKDtBiSWLUtyphQhCIx7I7tFeOZ1c6sjQWRetO36TP0bfoePTO7s7bBlptWlXIRCeHjM9+cOXPm/\
HxuOXK+Sa/VAVGktSjztUAq/\
JtzRmUJqQ5FEZUxU2ggYtQhPYoCibhQKOBmlQEatUTU3UBVpddSvVYh0UKEIyKl8AKiAsE3UFMgT/\
AejQCskBKIGBMlY98DdCxpYsCR+\
QplDD4f7Ytr411OLjRpN2REUVDB18TZuQYcRhheCYnHqHoZ0dZPqWpB3+yYtmoBv8I/\
oFbMvcSP9zSiP0rUEf3sZF+ASy9RsfVw5slOcvIkHwty+\
WDASTfw6sKP2Shcrrxj4pKwC6IU8TrUX1sDw3NN0tag/\
H1bjpw7Fv10MT3QanL3NA9tOJIXw86bCYu517cj2udTjeRXG2erOLe+\
h50d7JQmIt7WUsTuZMST1RMeKOojrCBuMgHnyi+\
m2XOtvfI0RPNXa2RzGqTupkamHtM4nIU4qMxyBM9ENCxiaxqiaq+7PQ1Rac7y9GjmbSuuDdlUV+\
vVWa6eutlL527h4xV2ivA3ATuvq/ktFN94+uXvlKpzPkzTj3i+0iGqInyKC1Uexkon9zHUjizuE++\
qHYmY+2Ds8buIDGq0R1nFga9PDnuUq/eE+\
4xGUERZkUCx6t0HlJEB9fFiXUBTOeQKSt6HxW8rohtqk4fXIfggoR+\
AtcIvcUB1JRQalPrSuoBXTgVrRaR7oX28FOLqQuYbgtNWQV8PD7qXguHn90BWcE2/wSuuKXl9x/\
1YKcGlrvO0UUzqCw/k0mGPsNi0Td0X8F9O2onfoNe3ujrR+h7aKSFdhlrcBXG83rS2/\
ALUboIogwgVZMRNkKFUtKwRUBNWhOS3YDwUG4m4BWI1sbYNIiSo3XY0NFZJxLLeB7ll950m6t3bvVf\
Fok0TuE2SEufJ7T7iR2kssySYq1PVET4uHkUUerAKejRbWzqC6WLyQB6IPpeP3ViJLgTNyyCLQ8hJK\
PPNKKZ3MkR+N9axP0DYqYQXsNmU2oEUawe8bb5oC+5wrmXZsqyfqimwigDZHIQUf1/\
lLOC0qtOPeNp5nQSm09tNi1pTI7wdkzYdvf+Yk8snXML89T+QKCCX2ofpYwU/tRW1z4R3ZUcX/\
mZMPanMkuTGhWLz/5nBfzjZELZEQJp5P8ISgENkxEBziEj7CPxCMwtgGB6RtKTZQz9gDLUhomaED/\
EhCSKJ+h2od0QhIkahT5M6WoaVoCs6WNf1Rc3iRrF4lrIAwqT4NyRk4Wc6MJlTJyF+\
NhKFUf1YKH4fCQXc1w8i6ik2yPjRjKiM30BmlMbcAZKNE51sqE8GhmZ5nQA6pzEqSdfSui+\
U7vzDaTIWc+d80ugy/53S12nzmdNmbaRBj0T5vGbI+tde/QX16u3ivlAdRMIwEtqmvNMYk59jjIk+\
3NO0j8+r+rRS8Z/\
OzY3mHSW086mEbjTvKKFdI47zjhKwDqN2NaJsROAdIG4aGXhHCSUI4B1WBN5hwXgoNrS4ZcSqtrZtR\
OAddtvR0FhFi+VkH/AOu+/UNX5+ggeHiEJi6t+mEH9TnjMrf2JKubn1CemzlKSPzZn1O8ny4L++\
9N88gQxC", 8 -> 
       "OEM6eJy1WO9PGzcY3oWEQmAtbNqkfaoFVbdJoTRHiqpWrRoCa6MlEcOhbEKRcHK+\
5JSLHZ19gQjxYV/3B+zP3N+w177cL8iRIm0SAp/9+vXz2M9rvy+\
2IVba9EoeEknsTZFvOELiP402R30qEUEeFb4rCZPIhRF06cgBkgOKGBlRgbitP4QkEr4Is/\
SnR6TDw7EJcX0Ys7mHKOkNAltke3yEuhycKbeihKbcRz3CkC+onmYbIl+jrgt/\
Hx3wKw0vJ9badDR2wQF0wWeAttCkXp/ijTHpuVS+8ai9G/\
SsKWIn1G44bIgLGt4D3K79SqefFfgmGePvE86T/aklGsj2WQ+4M4Echs64a3tkhBqE9X3Spy+KxU/\
Uoz+qjUL0isCSVO3SgF9G9C0O7B3xBhXtpYVIjQDpPE4FsXE4hTNyek1u+W7SXGx+\
dHmXuBdESjgQaj17Bo6X26SvjPJ3fRli+\
YRfqsHVaMGwJ3enZ2m2fXl1sNh4N2fIuE50Ps32sNX6Ywvndt5j4xU2SnMtfmnMLPbnWzzZOmWOpBb\
CWqKBca5sZvmrhv7KWRbt30MnL7NMmtWZk8xlWkeLLA5ri4DghRat0GIvy6Ie0q1kWdTai5AeL2Rbq\
4Zblgm1WV8E9awan/QNNt5io/hFOiwoHZr/\
kRDvOfRQiZnimi9FM3PnIylm7mskRXOxFDOXiaSYaRFJMRMIXmgRSTEjThNSfL1QiplIjxeyjaRoZk\
KNpJgJ9ayaOOqZFtNyDG2Xg+czrb58+\
t0yzu9OXKTVlLhVUEUyv9EfbS6Ji43OPcDUGy3mhsUcqKm3MAU4O/By22W1S1/\
kP7dtzt0H6NT3W0f/7D50phnOfK5/f4jOY6U2ILLGLYoLdTb2paJxAs+\
kKB6Q3rDvcZ9Z4HP1o0emDTqhbs2AzydHE8rkJ8gjXOrBexmCUO+\
ymn1IXTKlFl5vckhjjpiE196CwW9qfDRWLo+uxgBAQIIA3gq/+Q5Vm1FoUWqJEALenOUNFwpjl/\
Phhci3OKN2QbHE01GXu/\
jpHaOwUdUJCN6s6tddcTzwpYSURD3ps5xgXgrwlXh8pHI1pQumUgD8z5JO+d6ha3X/\
oZ336FUJqXtONfehmb7PVG/\
ZhO5qYFGGJtxQuvkS2nAVqbaygDsnbMLlEhrjuNkKmnvQrAfeKtCECyCcdhw7qwXNspoHsRvOOwu69\
2/eFnVoJHloPDMiGvJdJmYlZmLGTMwEk0rMpBIzMWMmZsxkP2byOmZSiZlUYiamGTPZj5mUTaBSDAQ\
MZPTlcX6tL4CSzqLNmxLSgd8BMx3eYJYI3PPtsvKzbZ6flzudXfXX7HTQ886HWVQ8mokqioblJpUDb\
uHisUch75TOhEZjj4+JEDogxCG/ZGK16ks+gmV7kcl6bHI6Fvm259NboSK+\
TWWpGqkAKYZhNfMDsdZ3WF9/KA9VIXjP0UqNwmZDabbNsfTAsj0dU/\
xDnbkOo3UVh6SnwKto0NltOGld9YT5eZJ/CuTGKRNkQq3PxHNIV2HITqXxd+HVcuDy3jBM1/\
HXqe55900Q5bhQbP8f5U8rqk2QI1SVBaUaRyNlqOstecmDUgx1iRoEO9U9pFOBfgpqNl3y/\
Vx6aB01e4yS+\
IKeFL69JCxiWcgfZ5ePUEk9cJMeXsz9baR2DLCwCF8P7nNf0i8tdrtTZDkTxwJhBrWt48G9qm3VmK6\
gaY/DtgZ9UDvq2bD5O0HPmDheSDonVrCc6pIues9y7To+\
hdmBPqFKd10AySRxgmPU52zdKuGlOoX5kEtRLX9ruSBrUMv9ZdyzXnqhhHxCv46n/\
rMwpjosZ7QD50CzQSUgRkMGhbFjo7qujAfUHesyWbslbAp1MuwndQV98S//5BeG", 9 -> 
       "OEM6eJytV11v2zYUnRI7adwsTTb0YU8lggJ7cbrY+\
ehnCji21xqzjSx0mg1BgNASZQuWSUOknBhB/sZ+\
1X7ULilTshsJaoE96ZK8vDyHOpeXdC3xpEfvZINI4q6LQtsTEo97HA2oRAQFVIS+\
JEwiHwbQrSeHSA4pYmRMBeKubghJJLQIc3QzINLjZmxK/\
BDG3ICPkbzlOowooxkPkU0YCgVFriUKder78F0/5XcayYp42qPjiQ+\
BoQuaEbBihwYDircnxPapfBdQ97eo56nicE7dtsdG+ARJjmw+\
7nuMahB6UdQngjqIswRzRKNskH83nNUOmeCtRTDQXoLyQUMhvh2quQvb4/IAUWIPIyCv0Gca0F/\
VHiJ6R2Al+g6V3NVcJFaEJA1zUWw3ZkDQszvcCf1Fd7Hzyed94t8QKQEDdV6+\
hMBrPTJQToXHsSyxds5v1eBGvKDpWXnUs2r+ltr3CrZOUsas+\
4XOF5khCrvdv3fxyt5HbB1hq5zq8Xt77nGc7vFs94J5En491jqNnFcq1ax4NROvkuXR+\
8sE2c9y6dTmQTKX6TbzPBr1PCA416NrPA6yPFqG7mGWR72Xh/\
Qsl229ZrYsE2qnlQf1spb86QdsvcdW6duFWP2/hPgmV4gZO5kuxGqmhmIhZu5qIsTM7IiFmC2RZt6+\
x0LMBPIdQsyUWSsnjxeEmIn0LJetEaL1NleHmWxjHb6OdfitUlyLKuqyFgvL5c26ejwxT7lfn7nlWP\
QPunGuqg62rtPQmuU3/6CzL6peR+GvErDX+\
El9SGSdOxQXW2wSSkXxHKqKKJ0SezQIeMgcCLnxKSCzNp1Sv25B81lzSpn8DPXVpwGUF7OUKmNqdoP\
6ZEYdvNnhUHqbTEIVdGDwpzofT1TI5t0EMAiPM4hW/DP0qNqJYpdSRxgIeOeS+25AxjcKY5/\
z0Y0odDmjblGRxLNxn/v4xSMnY9Rs2BqGd2q6GCqOp6GUnAlVAeclNK1i/iC2mup6o3aWqYqJ/\
13Vu49O0L06LtDeR3RURupcUOYxmMsHgOqtVKG7FnlUwISU1uY+\
2JC7ylYekKTGhGw0zjgxu5F5AGYrinYIJmSMmXaWBKtHZkXNA7WbeZdR9/HD+\
5LWziKPNwmPw1Qe1f2ER3WBx1HCo5LwOEh4VFN5HCY8jhMeBwmPSsLjbUKjmtB4DTRKkYCBiM6sq3v\
9f8r6Qlh9KCOdFdfgt6j8q2jSNV6fSybW+\
lqHyiF3cOksoHAJk96UxmNbZ0QILXfR4LdMbNRCyccQ345dNhOXi4ko9IKQfpUI4uelK5uGJEBoJmn\
mcSCTBh4b6IaKUBOC257WYZwU20qRPY5lAJ692YTiX1rMhxtxS2UZsRV4pXV91TOTNlVPm7BBSOAcW\
uC/BHL7ggkypc4XEnikrzBk3yvxc3NwnPrcHpm7K/5xqTvtNIlyGP9jlXpDT8DTw/\
fRAEDrtwOJ3iPwyBjR2Z5+ZKAJ8QLwG8IZoi/aMIJg4vJtP36lRHPm46lPFrihSwA5n6xfMH0O7x/\
9mnj1H1Nl7WY=", 10 -> 
       "OEM6eJy1V+\
tPG0cQ7xmbx0EDlPIhn7q1IvWLQ2MCeaFEAkOCFYMoa9JWyBLru7V9Yn1r3e4BLuIP7X/\
Tmb0Hd2AMRJQPwM17Zuc3s9ux1HSTX+\
htpllnXhUbntJ0oynJQEhNGHFl2BactFlAugEb9EhHBoQzp0eUZppXyFCGxGE+\
CRUnusdJx1LFGhcC/k5tyQtjt6Bmm7w/EKAAJPiM3ExvsaDWY4GmSwPmCK4/BLzze0qcxbgOeafh+\
ad0l3RC39Ge9Innkz+l6ASsTxrM74asy1fILg/4b4pAIPyCgStOZIf05HkanyuJpz8QuzNxb3xWFN+\
oTEpqYXvos77n7Ek3FFlxtfhFyDYTJ0xrqA93X7wAw5NN1kWh4m1blpo8lOfInEkdJpTCLcpEXLSiC\
7rU+jiCZV1miEt3Wyg398u08PJThleMeaVDBjWm1vF95lPiO2pVqFWl1hW1WvD/SIdf//4+\
h9RaHWd4vnzke5q7hGIvqidLqvD+LWZVqF57p5ZNp0n8MzLH/e/McZT/6rpxuT6+qp8bT+\
7xzXiPzb+ezuPralTjV4+oca35dI27ZjyO7a9iuf6UJV41HtcSj/B7A1O27AcBf/KMiZCrPPSTaCa/\
xczjZEC0IusPMy1Ym4s7TBe/8uEIw3nbpVsjPVeY5zdzMGddGHnKs0a/EUWUr/3Y+qZJVGhxX/\
rcFHiMHzuKUw8FRzd0unzAlOaiPFZr5gD2ognOKP1a3o4WJORNvqQLcgcXpBlK463Zn2GL8dTcQ1Od\
Kl/bniqbRizfl27JuDJBF5tByMdnWe/DVqXeP5FCqcEC+\
MRDb9FpqJuuSZfTUt0fhBr76hBWobK3mHPaDWTou2ByBqoxbPAzLmoWfM7vnHFf7zLfFTyAnZi0F+\
5e1N7mgg25S+f2JNwkdnwN+9wF5k812R+\
gyZ2LQcCVggsAWCv9EXocO7m0z7mrkhDoYnwxOMEY21KenijTC50SJkmH/bYU9JdbQsk/m+\
aCQRc3zQbHHLdCraWvcG3He3/\
Umv9BPdvBzsaD8HHN038nECzkI7nEZUtefiLmlI4v31VI9apVIbgSM+RVQ8tvswz7/\
VtQMzJ2Mh9x32QkqusVsm6MwFa4QX9j6DC7M/\
TXVbD4Km8RpmtGYq1CoqjqeYOrFbJ21brasO0IzJBkNHyOMeXWhh3hEMg4OBKinQyG40irAm4zQEcH\
l5FiheCJXaUCBqHIT/CJnBSFhnEfBlHjGmnGV4wgSC+\
Cz1Uqg2wECBJSGCDRgMBu0am4f9LGn9zjuiddah8EHK6R2jvjKe8ZBK1M76ttee6rmc1Qyz64dFKRu\
WuRo4Ey4LyBCrWUu3RG5YauSxAU2wFYdT2/az7QwqZS0vFMU6YIWcD2bEqqA5BsDgecPq/\
7wvN5HSHHHAweG99cVhOlOaQkd+1s/rkgF458xc64+40FHmtjDHffjOlyMkW2hHROk9s3/\
TFHHjVaIkDTZbvZ8xRxQJQ4AUfAwGvlf3p8tMi5p3vmeRP3fCeQfXxaBMTgHMaa4ToygCE1kL4L1Y1\
eSCSGA1NG4uIlu4C4I+\
IKaT7uxZTdWcuZsDPkXOBrRA7Mm0lxreIIBWBDwSlApyNMkAivO4BdksQj4slsw58z4VxTc9EUKo/\
KNbMbs7lmyDnrk1EGj/AQr8SFm8bzdi/jGsIRui70mPY0zBp0FZ+sllFl8QxWbBuPFJogFBp74Nb7+\
dwTgriegmiGRi9AgKZ9lXtdr/wH3dPtCA==", 11 -> 
       "OEM6eJytVt1OGzkU7qQJ0ClLYate9GqtqNLehFmSQEtbtRIEto0KqIuHdiuEhDNzJhkxsS\
PbkxAh3nGfZJ9hj52ZkEAKu11uEs/x8fn9/PlEjlrw4VzvMM2ieVXci5Wmfzl+\
B8hAyJCUD5mORZmEAhThQhMWRRBoolGhlwitY94mIiKMtJgkbcl6HY80NYkVUXG3lwxxR0JPggKujS\
lutKVdsYTwtNsCqUjMrcVIyO7ImtUwy5hraKOK57q+\
QFNd0QerOxVeJEWXDEUqSYIJVMySBIyTVI2UI0cVG5Ak+D+/\
Lc5ttgX12AcMkWlAEX6Okp87wCBYQld6LEhAv5EQ/ZaJHptKHUK0F/MzSkmU8sBmpAUJBO+\
D1ARY0MmCR2msFQkhiPHwtSp45CNI+FURDBLOGYYBb4gbPbwzTGcU5qyESmp5Z8hZNw72RZgmk+\
pq5UMiWiw5ZVpjhBC+eIGG53zWNkrFm7YcNXcoBtlm5jCXFG5IHma1K4Z4ljrvZmw5FxPCp9+\
3UPYPyrSw+v5mBLRkm02d47vMj4Wb1KlQp0qdS+qc4Hqmw0/\
ffswhdWq3GX5SPuKxhpBQ7Dioe0uq8PqVyapQvfJOHZcWCJmZ3cEPZjfLc3XDOtu4vZ6/\
7927x5e3e/T/vD+P9eqoumv/qroN//7Aum593YqpYrl5n8WtWY/\
ruUf8fWuSddwZ2gsZj6np6517z1nTOc5J4IQuNDpMN0QItNTkvVQb4jhEXlLuNgvO2lKkPERTjz5IN\
tyDPiQNBz+\
f7PaRJD8yHiYgkaDGBIREaE7vQMKGENLFfYHsvovPg4QQN39uiG7PmNw9N0SrkGTRWumPNAZDNKUDg\
FDlIdCVryKJJOuemhhbQpydquKB4BCVTHJ02G2JhP5yQylfbFnipytblk5Njtup1oIrw6EZCc/\
i3AdqabfPktS+AYZz6d+OKRd5Ry4M85HV98T28fhis0KqlycVYvhpQlyzsmlqmdh+/\
QqPWR2XEHP5J/aqGxWyYY/jFb0mf2nleJEm5PUq2lrLbSHUJ/bWK2QUSXPaVK1C1i9PLt+\
6bo4XTG2EjWOT6Amdz4o6RsPcPuiOCKn7WQI+dDruw3hv6TNTygJC7YgBV4+\
2Ui266CsYqyxeqRz1VNGXKVyDino69Sx+\
wfqDwlbksMrsINbaOM3YD2NhSykRxLZTY9gsm575gmqJmv6wB/\
R5kycxh6bBIQtM8AYN9jnNDy0ayR7j7ZS1YTL/qSCXj7hifQi/MBmzlonh+283fZZfre1EBGf5fEB/\
mhLPum8jlNMj1+/\
giDaIk4S0MWY7MDHCYWAHKDLo4K2aHGZQeTzAIPAYDi7jyWY0xP238SUbOagew37Tu8J6zZuJ8U1vb\
bNer1fGwK57Bps5nGvexhWG6x6iNwettZchte5dYhuxTgg3M29iVS1/\
3ElNM4GyVVidAYqlEShyJKxeg8CD/92/T+\
63bMLF6TYfc7FHtnlmHJWA9iancuw13rJU35idvX8AIB7QPg=="|>, "PageCount" -> 11, 
     "CurrentPage" -> 11|>|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"12370da4-f20c-4cd3-b518-95fb69ab0c8f"],

Cell[TextData[{
 "It seems that there may be an issue with the ",
 StyleBox["data", "TI"],
 " or ",
 StyleBox["states", "TI"],
 " variables. Could you please provide the values of these variables so that \
I can better assist you? data = {{\"TN\", 0}, {\"KY\", 0}, {\"United \
States\", 0}, {\"NY\", 1}, {\"United States\", 0}, {\"NY\", 0}, {\"FL\", 0}, \
{\"TX\", 0}, {\"CT\", 0}, {\"FL\", 0}, {\"IL\", 0}, {\"FL\", 1}} continued \
further and states = {\"AL\", \"AR\", \"Atlanta Metropolitan Area\", \"AZ\", \
\"Buffalo-Niagara Falls Area\", \"CA\", \"Charlotte Metro\", \"Cincinnati \
Metropolitan Area\", \"CO\", \"CT\", \"Dallas-Fort Worth Metroplex\", \"DC\", \
\"DE\", \"FL\", \"GA\", \"Greater Minneapolis-St. Paul Area\", \"Greater \
Pittsburgh Region\", \"Greater St. Louis\", \"HI\", \"ID\", \"IL\", \"IN\", \
\"KY\", \"Los Angeles Metropolitan Area\", \"MA\", \"MD\", \"ME\", \"MI\", \
\"MN\", \"MO\", \"MS\", \"NAMER\", \"NC\", \"NE\", \"New York City \
Metropolitan Area\", \"New York Metropolitan Area\", \"NJ\", \"NM\", \"NY\", \
\"OH\", \"OK\", \"Oklahoma City Metropolitan Area\", \"OR\", \"PA\", \"RI\", \
\"San Diego Metropolitan Area\", \"San Francisco Bay Area\", \"SC\", \
\"Tallahassee Metropolitan Area\", \"Texas Metropolitan Area\", \"TN\", \
\"TX\", \"United States\", \"UT\", \"Utica-Rome Area\", \"VA\", \"WA\", \
\"WI\"}\[LineSeparator]"
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "It seems that there may be an issue with the `data` or `states` \
variables. Could you please provide the values of these variables so that I \
can better assist you?", "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJx9V11zG7cVnbR2G7FR22Tamfbt2vVM61SiLXfyYGU6GZa2Ek5ISS2ZcTy2E4G7lyRCLL\
ABsPyIp/+hr+1j/0X/Th/6O3oudkmRVmI9WCsA9+vccw/gzm+Oh61OCDpEZTMOB50qukJFnck6vs+\
cx5/h1shXjKW/qMCX3hVl3Dt6pztTsets5FXssjE4AmdB2+lZZbOonf3B45cuxKcLZSolx773+\
K92j3sub8b/QE488XrB9txFHjs3D7fPlAnI+X3Z+wwFOr/us53GWfe3WH2ytqrQ2U6Nuw5/\
eeb524pttr5kq0xc+3/9U37+88nx8Oc9m5kq58bnnt3BQK1Gbs427C0fDthPeQBI1BT/\
NGjeHriczfBwWsbjP7U/\
Oo6VH7vj4S9QY0Bovhn6cDhzy4G2utDfcb4X4tfD6BkV2elFFcsqDjjO3P6Rn424KNkrxGE/ST//\
g9PbI+fMfr7vpaWnVo0NwmyQvDVy5WX3HXw8UVF18PHupqTJj8OtPvDo/Ai73hke/iSsQ+\
TiePjTTDpn4/Afh89dRcozKZqxKSeVoWfOTLwqqK/\
stIIjUg0XI6E9nFMXENGGoLFNcOHpGzcmHSg6yh3FGdPEGeOWqP201fqQLiYT9jddh2qKTBO7aAwe5\
+QslZ4X2lWBtAVooQ3zz5AbTfSK2Hvn09LTVWmUtvUKFU3RFOroVUC4yubsJck80BKMoyVqpqV3drr\
rwaXmIHc5Uqg1jZkA0KSSYZGKtOUVmqSFAHlynTKoIbgOt9RxRg5/\
ehiVOgtAjixzznmbns20YVoD7VByppUBW+\
D4BiRH6UymbOpH7VPZde2x3Wr9jj5lC8IY6tkQfVWPpkD8bIaNBYKvpR/\
ga4mNVElElUiGxsZlc3ITrOUIFCpAB4xIxzpOnHlm9CGbg3FzWMhePVipSrNp2xKhSJWl0ZnQ8bR1d\
XW12WyJc1mQlLyODEjhGwh6kR/pdA1sX434yxRjmwiCFHUqOdijPAU9teGU7q2+ekR/pPVXj+\
7Ba29wefG3Ued8dGevZjRWoiky+\
CUAbQoh8GPHn6AusnVEnf6zzvMhcchUyVsUVDIMRoVZGxxRRYkKqReBWgBLCqaX9x4/bj/+\
iCQyOqOLurETB0GJQpjG48srCf3yHhjtwB+zvoPs+\
9rOKdees2ikrTeHIndZVYCpSX1pvG7w2hsqCmscWJ3SC6PGbF79oVSZ4XhaeX2/\
TVBPAF5n3jr4kF6MpE3bQ54nD9LK/bS5DXyBehaal9uD00rn/\
GCzv9murXoynDRMaWwNIvTKg9wP0m69eb/hJigJDcAMSfo3lWBdjKFv182pu5kYoYS8+\
6gYoNimCwsIk97oHUvrYmJ4mpYbgYZxjUH8VCqDE06j8zlzmUxAEAGtJnjpwFeghANfYJAmzT0IZqG\
fUzgVZUdYaKrKZaxKuWLzCtyDyROXEhHxBOemxo1huFBABy5DHUHH34d0yrLczcqvYXiZcKIC6fib+\
rAFSganqC8UGA1EIywvt9sztcAos8xpDgFKROujPEhYLRBz65a4SeAxQ9MmE8pVFFFwlM0YQ7OP91b\
JNs3McLNFqb80LoYjiUKurJU8VNlMLBI160wNT1lkGGkUat70lVXQSSx3lPr6trolorpzV/\
33tq6rgoo1SYl2iMo5jwpxAwUpQgQgRQAnXt8dnd89evj3o9d3P3/efHxhQawcPEC9oVk7x+\
bJ2zbTx1m/+Rh92Xx0R29u9fo7Kyd7h7/P9xtryaCzsTxHP587P6eujmvC6wEy4qBuuBw6gP/\
N9LaBzn+wVOrRUi5y0ZIMkhuFtvKHde30CS0L6Av6F8QIgOf0sG7hCRrLpcJbhc26TeduSbrx5hIL0\
pBWYDcE1BMGpJyB5hq+ZiqkKLVPeUUEuehXpFa6di4nHl3bBRHTnTyO6CStNGm+0fSU3e6+\
hfP9M236jr3rSsmB/kzp44WQ5YhepwhfHxHgefAxYC7G7P/\
6Iq2C2On3q1cft5zlt9ufvNVeAICKPALuRZGeJPLs+qbCC2KqFzJJih5es/9g++raGYF/\
v4NrKDAXzWNF3hq8ebKAFTqEijd3OdOVJJjuoKs6m6trAWpLDSZPFxcUD28vka+\
Fbq56ef1LkyZN2tfClR5YiN1Lj5QxR1y2zRNRnOHx+l6/P2j+++D88FCei53rYlrN+\
3SkpuGgZ1GBcPT/CxWPzA=="|>,
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.9101244333472557`*^9, 
  3.9101244831468964`*^9}},ExpressionUUID->"1a8b7b4d-1877-42b5-a42a-\
56054a11280b"],

Cell[TextData[{
 "To count the number of times each state had 0s and 1s separately, you can \
use ",
 Cell[BoxData[
  TemplateBox[{"Count", "paclet:ref/Count"},
   "TextRefLink"]],ExpressionUUID->"93a5bf30-c924-4a05-9758-0d2cc1f41f6c"],
 " along with pattern matching. Here's how you can do it: \n",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     BoxData[
      DynamicModuleBox[{$CellContext`attached$$}, 
       TagBox[
        Cell[
         BoxData[
          RowBox[{
            RowBox[{
              RowBox[{"data", "=", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"TN\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"KY\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"United States\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NY\"", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"United States\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NY\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"FL\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"TX\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"CT\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"FL\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"IL\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"FL\"", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"TX\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"United States\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"United States\"", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"AL\"", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"New York City Metropolitan Area\"", ",", "0"}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NY\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"TX\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"NY\"", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"United States\"", ",", "0"}], "}"}]}], "}"}]}],
               ";"}], "\n", "\n", 
            RowBox[{
              RowBox[{"states", "=", 
                RowBox[{"Union", "[", 
                  RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}], 
            "\n", "\n", 
            RowBox[{
              RowBox[{"zeroCounts", "=", 
                RowBox[{"Count", "[", 
                  RowBox[{"data", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"state_", ",", "0"}], "}"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"states", ",", "state"}], "]"}]}]}], "]"}]}], 
              ";"}], "\n", 
            RowBox[{
              RowBox[{"oneCounts", "=", 
                RowBox[{"Count", "[", 
                  RowBox[{"data", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"state_", ",", "1"}], "}"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"states", ",", "state"}], "]"}]}]}], "]"}]}], 
              ";"}], "\n", "\n", 
            RowBox[{"stateCounts", "=", 
              RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                  RowBox[{"states", ",", 
                    RowBox[{"{", 
                    RowBox[{"zeroCounts", ",", "oneCounts"}], "}"}]}], "}"}], 
                "]"}]}]}]], "ChatCode", "Input", Background -> GrayLevel[1]], 
        EventHandlerTag[{"MouseEntered" :> (Quiet[
             Needs["Wolfram`Chatbook`" -> None]]; 
           Symbol["Wolfram`Chatbook`ChatbookAction"]["AttachCodeButtons", 
             Dynamic[$CellContext`attached$$], 
             EvaluationCell[], 
             "data = {{\"TN\", 0}, {\"KY\", 0}, {\"United States\", 0}, {\"NY\
\", 1}, {\"United States\", 0}, {\"NY\", 0}, {\"FL\", 0}, {\"TX\", 0}, \
{\"CT\", 0}, {\"FL\", 0}, {\"IL\", 0}, {\"FL\", 1}, {\"TX\", 0}, {\"United \
States\", 0}, {\"United States\", 1}, {\"AL\", 1}, {\"New York City \
Metropolitan Area\", 0}, {\"NY\", 0}, {\"TX\", 0}, {\"NY\", 0}, {\"United \
States\", 0}};\n\nstates = Union[data[[All, 1]]];\n\nzeroCounts = Count[data, \
{state_, 0} /; MemberQ[states, state]];\noneCounts = Count[data, {state_, 1} \
/; MemberQ[states, state]];\n\nstateCounts = Transpose[{states, {zeroCounts, \
oneCounts}}]", "Wolfram"]), Method -> "Preemptive", PassEventsDown -> 
          Automatic, PassEventsUp -> True}]], DynamicModuleValues :> {}, 
       TaggingRules -> <|
        "CellToStringType" -> "InlineInteractiveCodeCell", "CodeLanguage" -> 
         "Wolfram"|>, UnsavedVariables :> {$CellContext`attached$$}]]]},
   "ChatCodeBlockTemplate"]], "ChatCodeBlock",
  Background->None,ExpressionUUID->"81f0a914-0d4a-443a-bedf-10643eeb5c86"],
 "\nThis will give you a list ",
 Cell[BoxData[
  TemplateBox[{"stateCounts"},
   "ChatCodeInlineTemplate"]], "ChatCode",
  Background->None,ExpressionUUID->"479a225c-85c1-4b39-8134-a1465080ee7d"],
 " with the counts for each state: \n",
 Cell[BoxData[
  TemplateBox[{
    Cell["{{\"AL\", {1, 1}}, {\"CT\", {1, 0}}, {\"FL\", {3, 1}}, {\"IL\", {1, \
0}}, {\"KY\", {1, \n   0}}, {\"New York City Metropolitan Area\", {1, 0}}, \
{\"NY\", {3, \n   1}}, {\"TN\", {1, 0}}, {\"TX\", {3, 0}}, {\"United \
States\", {4, \n   2}}}", "ChatPreformatted", Background -> GrayLevel[1], 
     TaggingRules -> <|
      "CellToStringType" -> "InlineCodeCell", "CodeLanguage" -> ""|>]},
   "ChatCodeBlockTemplate"]], "ChatCodeBlock",
  Background->None,ExpressionUUID->"5a42eacf-d3d2-4361-b5c3-0a66c281e120"],
 "\nNow you can create a double bar graph using ",
 Cell[BoxData[
  TemplateBox[{"BarChart", "paclet:ref/BarChart"},
   "TextRefLink"]],ExpressionUUID->"025069ac-9147-4f4d-a1c9-4221d9c636a2"],
 " with the counts for each state. Here's an example: \n",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     BoxData[
      DynamicModuleBox[{$CellContext`attached$$}, 
       TagBox[
        Cell[
         BoxData[
          RowBox[{"BarChart", "[", 
            RowBox[{
              RowBox[{"stateCounts", "[", 
                RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"ChartLabels", "->", 
                RowBox[{"stateCounts", "[", 
                  RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{"ChartLegends", "->", 
                RowBox[{"{", 
                  RowBox[{"\"0\"", ",", "\"1\""}], "}"}]}], ",", "\n", 
              
              RowBox[{"PlotLabel", "->", 
                "\"Number of Sponsored and Non-Sponsored Jobs by State\""}]}],
             "]"}]], "ChatCode", "Input", Background -> GrayLevel[1]], 
        EventHandlerTag[{"MouseEntered" :> (Quiet[
             Needs["Wolfram`Chatbook`" -> None]]; 
           Symbol["Wolfram`Chatbook`ChatbookAction"]["AttachCodeButtons", 
             Dynamic[$CellContext`attached$$], 
             EvaluationCell[], 
             "BarChart[stateCounts[[All, 2]], ChartLabels -> \
stateCounts[[All, 1]], ChartLegends -> {\"0\", \"1\"}, \n PlotLabel -> \
\"Number of Sponsored and Non-Sponsored Jobs by State\"]", "Wolfram"]), 
          Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
          True}]], DynamicModuleValues :> {}, 
       TaggingRules -> <|
        "CellToStringType" -> "InlineInteractiveCodeCell", "CodeLanguage" -> 
         "Wolfram"|>, UnsavedVariables :> {$CellContext`attached$$}]]]},
   "ChatCodeBlockTemplate"]], "ChatCodeBlock",
  Background->None,ExpressionUUID->"c5359227-947d-42a7-ba0e-4ffff912f7d9"],
 "\nThis will create a bar chart with the state names on the x-axis and two \
bars for each state representing the number of sponsored and non-sponsored \
jobs.\n\nNote: In the code above, I assume that the data is in the format you \
provided. If your data is in a different format, please let me know. It did \
not \[LineSeparator]"
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      PaneBox[
       TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
       FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
       "ShrinkToFit", Alignment -> {Center, Center}]}, 
     "AssistantIconTabbed"]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "To count the number of times each state had 0s and 1s separately, you can \
use `Count` along with pattern matching. Here's how you can do it:\n\n\
```wolfram\ndata = {{\"TN\", 0}, {\"KY\", 0}, {\"United States\", 0}, \
{\"NY\", 1}, {\"United States\", 0}, {\"NY\", 0}, {\"FL\", 0}, {\"TX\", 0}, {\
\"CT\", 0}, {\"FL\", 0}, {\"IL\", 0}, {\"FL\", 1}, {\"TX\", 0}, {\"United \
States\", 0}, {\"United States\", 1}, {\"AL\", 1}, {\"New York City \
Metropolitan Area\", 0}, {\"NY\", 0}, {\"TX\", 0}, {\"NY\", 0}, {\"United \
States\", 0}};\n\nstates = Union[data[[All, 1]]];\n\nzeroCounts = Count[data, \
{state_, 0} /; MemberQ[states, state]];\noneCounts = Count[data, {state_, 1} \
/; MemberQ[states, state]];\n\nstateCounts = Transpose[{states, {zeroCounts, \
oneCounts}}]\n```\n\nThis will give you a list `stateCounts` with the counts \
for each state:\n\n```\n{{\"AL\", {1, 1}}, {\"CT\", {1, 0}}, {\"FL\", {3, \
1}}, {\"IL\", {1, 0}}, {\"KY\", {1, \n   0}}, {\"New York City Metropolitan \
Area\", {1, 0}}, {\"NY\", {3, \n   1}}, {\"TN\", {1, 0}}, {\"TX\", {3, 0}}, {\
\"United States\", {4, \n   2}}}\n```\n\nNow you can create a double bar \
graph using `BarChart` with the counts for each state. Here's an example:\n\n\
```wolfram\nBarChart[stateCounts[[All, 2]], ChartLabels -> stateCounts[[All, \
1]], ChartLegends -> {\"0\", \"1\"}, \n PlotLabel -> \"Number of Sponsored \
and Non-Sponsored Jobs by State\"]\n```\n\nThis will create a bar chart with \
the state names on the x-axis and two bars for each state representing the \
number of sponsored and non-sponsored jobs.\n\nNote: In the code above, I \
assume that the data is in the format you provided. If your data is in a \
different format, please let me know.", "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJyVWN1yG0kVLsABLDA/\
W1AFdycmVZBFUiIvexFvAaV14l2xsmyQtrIpx7tuzbSkxqPuobvHktbld+\
AWHoJ7ivfhOfhO92j0l00KXyQz3eevz/nO12fU/\
kWjX2s7p5wXOpFuv114MxVeJbyO51Nj8er2BraQWPpYOHlhzTT3G6IPTybCnxjt5dyfyCyDCIw5pce\
nhU68MvobxS+M8y9uRVYIFnuj+M/Wxa3Md/2/xxLPrbqVume8HBpz4x6ciswh5p/\
y3qc4oLGLrtRjPzn5JVafL7SYqmTtjOsGf3Jq5d8KqZPFhdQi8wv7z3/w37//2Oj/\
qKOTrEhlaXNDb/9MzAfmRmq3sXxwJu1YniElYox/ymw+ODOpzPoH49w3Pmh+2PCFHZpG/\
8c4o4Nruev6oD8xszOl1VR9LdMNFz/veytxIj0+L3xe+DPpJ2ZT5AcDOc2lFfAj7Sj8/\
RdGHwyMyTbj/WFYeqHFMIObZSb3Bia/OPkWHp4LL9p4+P7ySKPvuL0u8tH+NnatyWT/u27hvJw2+\
t9LuHLa9/9+8MoUJKwkQROZ5aMio5cmG1kxpa7Q4wKGSJRY9ITyyJROkCJaAtQ3CSYs/\
dUMSTnyhlJDfiJpZLLMzHD241rtfTofjaTdNe2KMSIN6KIhcJyS0ZRbeatM4UhpJM01of4pYqORmpO\
01tiw9GKeZ0LpuELT8tDkovfCwV2hU2k5yNTRDIijGc5MM2v0eN2CCcVB7CwyFQsaSkKCRgU3C59Ia\
TlHkRQDIA2mQwQxBSt3M+\
UnZPBqoZSrxCFzpKVMZdqklxOVSVog2y6XiRIZ0ALDOympB5lE6FCPaFPoRbTYrNV+\
RZ9IDcBk1NHO2yK2Jqf45QQbt3C+4HoArzk2wkk8TolgaJiZ5IbMCGspHLkCqUOOSPnox0+\
slKhDcgPE3UCD92JjhVNmy7LN4IpEnmcqYTge166vr5ebNTbOCxySVV4ipbCNDFqmH650TGxXDOQXw\
UcVCJxMYygp0CMsOTXW7pgezb88ot/S4sujR7DaObs4/\
8ug3Rs83DgzCsveBGX4jxO0PAgBH2v2OOtMW3Vqd1+2X/\
VJukTkssqCCIouE27SBEbENMcJqeORNQeUTCW9fvTsWfPZh8SeURk1jYUdGRCKZ8CUFl9fs+\
vXj4BoA/xki4eIvqv0DaXKysRnXNbdpkhNUkyB1MC+NFyU+dpoKnILCMyP6TITQ5ld/\
SYXSSb9cWHV4yaBPZHwGHlt/326HHCZKiErR0/CyuOwWTk+x3lulZxVguNCpfLJcn+\
5HbU63JzUD2FUCh58ZQHuJ2E3bj4usQlIggPQQxz+\
LhMspkPw26o4sZoBEYLBu5mVDFls0rlGCgPfqDVNbXxAeOiWHUd9v0AjfsIngxEZWuczKfOgAoBw0i\
LAcwO8IksQ+\
ByNNCrvQSAL9RzDKDM73IJTRcptlfMVmxbAHlSemxAIkycwN87MEIq3AtmBSRc9KP9rF6S05LtZ2AU\
UL0KeaIpw7C4/\
VInixpnGCwVKZ8wRWs6q7Ym4RStL7tMUBBSA1sXxQGGRIG60meEmgcUERRuNKBWeScFQMpFoms18V0\
y2LGaCm83z+fPMeFdnL2TyyOSuSCasEaAZI83kWDINI4ypuCnrKoVTgSzXmHp1W+0xqa7dVf/ZU/\
FUYLEyKOYOZjljcULcQI4PwQQQPAATd4eD3mH96X397vCzV+XD5xrASoEDnNeVaz1stt62GR5Ou+\
XD4Ivy4WSwvdXprq20NoTfZHtrLSi0l5o91POVsTd0ovyCMD2ARgzYDZdDG+\
nfDq9y1PvGo1KHZnyRM5ckoFzPsOUXbZrhEVzmUBfUz7ESEp7S01jCFgorc4FZRWaLJvXMjFRpzQQU\
hCYtgG4QqCU0SD4BzBVsTYQLXqJNniIcX/RzEnMVjbPE0UrPMZmuxVGnVlgpw9wqeohufV/D+\
KbMClb71Tizhq1/YboqExKyUUyHAOb/k5DVvQ3Y0vUJ27omkWHWiNdKLrznhsZtmEzQOE0MNVai/\
zE+VrrgMuUxMOH6nMXGrwVE/57uIpQJdaUI5vJxq8blKkOAWu8SiI+M1PKRIVQ+\
MrR3BTrdzdXWttqbvW2vRrX2ysI7ob4b9prT3tvScf9RrRZq55BGbBt9yTm9vGxnGdxfXV1B4GtpTa\
gZC4WHIASLQfUrNkRPPkJkjIw/X0aD9QgKtmC0fLt+6+36McTKxMAKDQQ7eXm3FL1bxVinyt39/\
VUYtmoD5ruZyjIa45srIIqZEAPq9Zrp6+WkV/b/dqNF7NXuyuLctTjwFR74/\
en9qvx3H1T7ne7mfoAov9eIlmvvrvKagVBUdsAGSiehBdZkAgZYpnzfrv7d76L60f39fUxTb63bwh0\
m30RbceK6/lhYfKla/66sVb0Mo9Xctd7ES0OXa6UoAXh0dVWnsNmN12XjD7Qr1VpJlTcpxO4On+\
KMh63Dez7lBSg4mOCtw15FYf2KCJm0ekY3Vit/\
YvrEhBkSdriDpCpBnJmEva8SscXlvDRvVHzuZ4aVthNF/\
FMBf0n75US7olq3EScovLFJ4U0unudRXJeVwLwmhuYWt0OH5yyMK/EbjncDbZZTYRic+\
feEUHlMabcqfJN1RnEUWpMFFtQojKm+1KnjbsOggrEDsz088NzUxOd4t3tW/kZibP+\
Av4nbq4ulVn6ED8TY7Xc0PgkZl/8DtBwb3w==", 
   "PageData" -> <|
    "Pages" -> <|
      1 -> "OEM6eJy9lE2P0zAQhulSCTa7IDjAicOoFy7t0kXqpUCltogPUa3QJhJCCGmHZJJace\
LKdtpGLH+EX8s4aVqqXRaJA5fE82H7ncdjxy1zN6C1fY0W40PTngljfRMoCDWhJcAc0BgVCrRC8biw\
KuNhiFKWXShVASGnGIvawkrYOSBIXgJUDFKF9aQcMzK8UgR2TkJDqIrcmm7jyaEwBHHLtKckJf/\
vTNS60nNgjgLKFpKFsIvNWt7D8U5RMGedkf9kgaEkO9QUP7saPXIVnlM8E3nqD8FydSr7JnJy22cgc\
vbsF3oC70jTU6caaI2sgYbgxbf/qrFVa3RaXab/s3XxSclYYwYzzJMCE/\
IaMAZewffOGa3gs9JppwudKUoRK50LdBarRuMGb6TSIsLOjxdezc5NPO33u/DcfU4H/\
Bn0OepFLImDVxB82e7Z3eD/6l04keeFJONNMEwTzf7ItM9UTv7j6RztVEX0PpfMqanQv9/\
4x6EVS7phhZEXzIXhnpASEk6teoVxg+Fu2O8pwyfgwvrfULc3qD+8vNzBhN4IKkK/\
M3XOitgGbZXk4G0JO8+\
gfznyH7hCP3I7Kc39bim6rlSWcPhWYzmjJclpa5tyHGCSiDypjPFBj1djgYHyrWZvUC4YZA3WoXSxn\
n/shk2L+Lf8Rw3pCR9duj2Ae3vuG/h73qTki8X7/b+rle5eBEIjZPmHV2Q158tVNUNKJd+\
xjXH9gwFLlAXtsur2PfkFv02cwQ==", 2 -> 
       "OEM6eJy1Vm1PG0cQzhEbEgcopOqHqh8ylSJVlQ4qQt6jSDUvSZAgSlknURVFYn03Z5/\
Y23V39gwW4i/\
2N3V2fecacNtEFRIyd7MzszPPPDNzWUS3OnjqdqST2RI19nNyYrNjIDF6iNaBk12FkPIx5NoZkKBYJ\
YaRKSGRGkpCcH2ELKLGNirF/xe2zGnwN0d3OlgMlHTIIn4du194xRKHWtwdyEShe24x+\
6WW3fHRHGK2n+tjcQ+yUicuN5ovh49GZVYWsC91r5Q9XL+\
eSxPIxmICjeQwDRlTDJhlyMEMUY1qeHLd89kXNTbEAoVrClkpmK23Wm/Q4k8EjBWeSg4Mn0Mru/\
mfgUfjwGel2KSVnZGWRZ4cmLRU0+q0+lqZrlRHnIFM+pjev8+\
O5zuy55UaV31FNH9oTvzhzcmFtWTuiqTSEc1ACxG9nHEWnU0Jm//\
oYpaaiDZEFIvoQfjdFNE5P3yx7cNg9Sj8Pv5K2yfB6mn4fRZs+e+\
FiFozPDRUMJnOvXGZZdGnCUafxa3tvnTbJkXR3NOD0nlgD7lu1NqSyXHPmlKn7Oz2aytH+5462xG/\
frM7RO3eSJ0qtFzA+hJPFG+9g0qOMBWLB4abcFc75lnKh3e3TTHwLndPBxaJuHvYW/O3Mkdfh+\
ZbxJTqEMRq1VVHPsauMcdH1HhrNGZNn54YFV2jxL0rSvVDO3SnWG0Huvkct0rnjCbPsYqkszh5g5Z3\
h1KV0pt7Topfx5PmJZydbcTwIIbN8xjOHsbwKIbH/vFJDE9jeHZ+/qLlC8CaFdifguVnsVBFOYF3/\
gBd36Si9c4id5Zv3cnZ8jtJFBCmHXOi6Xa7dKbgcJKJyuLfKu8H1OjYEi9hT99e6MMPnBAS51bXqfL\
DxevxYAgv3kObyCR5SH1ShxUPQscIZ1mzMxqg+H5Pq1zjni+\
sDHPHwxv6tzZa9JJ6HE7nfyHIlfea5BDTD9LmHin6l2Ehvqu5uqVMclwPJLF0QTyLwGPaiJ9bnX5Oc\
JIrBT2OOSyKsCDGxarG6dfNwGpuiR9qasRQESOGmhaMIIfIlc6MLfxV6Ze02cwatefWZtRjeVyPugh\
rl9C/8b+hW2r9PrVUr2W3/RlxZVwf0px3mWVmQ1hVBCYLy45zjSHFAerUrzbeu7505GyZuNKiV+\
N62vFXwTq8MrZeajHk02fQlwRFqVzOZ1OXUNmttmn9AUEDTPJsFC4a703epBVZoDtiLKolC4S8dVOQ\
tlcWPnR2dy0gbfDS3kcHBcKxNidVYpwRs1nqEX+TWA7Hwh+lR4xn3Y9/ATWkIBY=", 3 -> 
       "OEM6eJztWNtu20YQLXWxHcVJ7KRJUfShCyFAEkNWDcRpi1wMyJcmLhQjzSopCldAVuRKYr\
3iEtylZDXOz/\
Sxf1agH9EZkqJJkXKiuAbyEL1Q3J2dncuZOQN2DbXU4sd6l2nWvalKTVtpOmxJYnqcaU4YsaTfEZx0\
mEd6HnP7ZGTrPtF9TkzpO1oR2SXKlY6SHrfIH7KjCHMs4khnfWq5Kz3CmdknSoPqGhlLn5jMIb7igb\
6uoUo7XAh4Lm7L48Ckgrrc4gNXwAFYgtfQwqVt5u30mafpDZeZguuHHu9+\
Fy9eRpde8m7Tdo7oPwXS9R1T29IhtkN+\
laLrsQFpMqfnsx6vk0rlJ9tTOjTI4WCulqTPhhwXPGKBHXgQTWSu60nXszE04M6A6Tppcn0HfFbKHw\
QnwqOMCDAUgwM70oQTcL+qkVGfezwMQ2KDeNz1uOIYT7wnuBPjxSC23LS7thlGrU72po+\
a0tHMdsKDgRBx2ADiG+\
com6JakKOUQDZhdfIMbEXfHMKPGWSBo2BfjhKBGdi9viZCyqOHpNItvjeDRpjBvFyX1cruGEy3zefS\
8kVSXK0+FbLDxBumNfjPrdu3QfFCi/VQqJTVZaiFl3KUgExipRiBqIQOUONJYmsh2jLeUqNCSwR+\
id2VmaoKj08Sq+WZcotVigmq0sL6Fl2u7jBhQ5Ydm1WpUcuRv1alk5T8DBkJzxUfbGzki1+\
vHkgn78QPDzZo4WQLTuX5dS4vFqtQbEzN5cDm3A58v3FhDlSqB3xEfpPe0Vw+3J/bh80zk1Ce+\
HB3jRp5G8WGZcEOLQ1AL/5ZCIpd4d/\
C2r1YJy3W63V8M95R4xFdgpaod6TFaXnfcX2NBfESqktVtpl51POg/i247dJTj42bfMjFjgGv1/\
aG0IyeQZcQ3IMywxoLggnljKd3uWBjbtHl5xLa956joVNYsHl9Rw5cVLl3jA1NQYMCbeVffJtjIsoH\
0F7VxAS6GjXjN2hjB3rIG1WC4PFuGf2n40FHCvptRmjypxE0dbraCJoC+\
rjtaw2Bx04QtZK8zvGFuro3ZMIP+id2DvpXIWhmT8jbCobw8UkEELK+\
RZJVWiNTWEABKEdYzyQdt6DuTrZqOTrDmslVtzlbHVRBvroYwbka78/\
WuHlq4N01AggjiK6QRhRZuxfsAJ4q7x7RxSgRMYIWnnPdlxatvPA4tHhtD3m8d/\
UFcFQAIrUrR4661PC1BL60zVhk+VTklatKLc/nU/BSN1KE8BpyxhWkbwLFSA/\
gs2c7veAFNTRO2TGG2grmuSWp9kCyNXY5/XrfEbbD9xG7zETjEUEBkUwOLePKZFBI+\
p8ycuWVo4DyrdcMBoMO2jCbtejNSTluC2keTZiRXkkt59VoWBn0euVAjtKz0wXNTX8bOAdFc2AwlEx\
NgnWAnH9HiHhmCkeVcXqCwZfjdXZs44xERmAnPjMieiRRc+7QYUJciHJs1+Ua7+\
nBAwMAKPU0tz7RwWMxE3PjMK/xX8nQ1GJqClki0e9Maiulh5rDHGIqNqDTAflk+\
MxoR5yUd9UcivOYD3VPiAkJ6Uz+\
vhzEqck6XCjkzBwzFl4IZgLx5BnycVbHw0AYhlIDoHoaklmmLoem8h6H0pyytRjnL2dx5TT6JApRjX\
6JkVvPbLwvXpf2B9iY7D95MGGUm8yDV6T+9mfe/xDe/9eYFOdhwHQh/\
eMPcXMICMkQaruWJ5MBfjuQehcKJ2CNpBtC+DB5RYDAdo0g+\
NrJQyHA8NTbaeCE106jJroyRgYeDXBRaX9m8E+Bwa9V9vFjAvAh8lqNzMVd/\
1O7vzUxNoxg7ETcNM6wvxx8O7hoq2dwyXkM/x0GCo1ASX69wvnjwz9fMZhewtm4RqDNwbyDqBPj+\
oXHI8lS5wnCN5MgTH8vgslrjkEyxdS3ErNkcj01Tt4ngHjgjMykKMK+\
mJ4Vww9UcxiU5uOvMhZFGymTfpxpUiA9bdnpiPpRyT6btM+\
T05QfA3YUjuvh11qB2r3Ahw7X0CjJ0FZ2xxa2Htf/A/qmMMA=", 4 -> 
       "OEM6eJy1VllvGzcQ7jqSD9lObRct0KcQRoC2gKxKTfISIwEsyXVUyIFrKsmDYcDU7qy0FU\
Vul1wdMPzY/9Lf0F/XIbW70RVfRQHBXg7n4nxz+Y5ab8FI15lm/rbKNQOl6V9OSxKlZQREhVIo/\
PDIH7KtCBMeEVIczJEDoVEAQhYxDWTAooC1OSjSZgpZpCC6a8g8BmS1h/1Mwz5xJY/\
7okjGMiYuEyRWYHl8R+VqwDn+X6vKkXVxRW22oB9ytIMkPE48XjuJZBxWx3QvZC4H/ToC/+\
eUtmkeeA5+MxA9+oz4sXB1IEWJvIMIfjCPIjBiqBRek4L/5E6jzsToMvfyaqc+FqwfuKfSi/\
k0u9o94bLN+BXTmrld8J4/R8WrLdYxTLlFXY5aPZdDc7mRGUwpKwuUJ0kkch7KUufNkivn+\
ladS9lS4uo+Al3Zp06ROhXq3ODHg0R/\
mYiWHyH64vFWXz7e6qtpUfwdUqeAv3thsNkxmQdefQGK3Hy+OhdfxnCZw7kmw78rB29p/tcgMi+\
4fJhv21nh/YaVu9y7Wf8vbOwTM/\
eysYMtgj7CTDkxs17rMl2THtB8Q4SxNqbOsZpUocrcnpESHurbOInYuAkD4DUHj18fD0Dod9iiOERY\
VqkdU75Gug6cjcGjW6cSO8yx0Fj9Hl7u1WQ/NCqPR2EESmFrQG353+\
MAzOPy7wE8lbpAdz9J7kesf2V8bEvZu1K591KAnzcvpON+W3L6bIEp/\
TiyrYfuHtkmYN5YjbXGUJnKT1rHsk7xlXp6bBooM+KmU9B/HJMl5A25vp7UZpFUborkelJtRVJODy+\
mb15O37yyh5vDQmEKCdSYJOeFMVAkJuPIwVti8+0SmWcyCNmnhC8qyDCP/hxL+\
fKQriUBypBdPQXdlR4tnEWArVYHA8junp4xpSy4qi6HQm0cxVr2MRJuxrL1meVDqHKtKIY52NU3M43\
5oxlGCsOapkiiB/OmE4iOPRgNR0pJN7BRz1Jgx8S/JamOkLM1DoF+\
3xA8ENAwOcVc47xB1jb0VGjLUJpMdGLWgen3zzi580EoNgDvYzpCb5ke9Nu0TKpcur10QtHtGfKy2p\
lkLN0rNMwwDlQ6/ooEudepHtvBlbShlVaDNggyMcLRESJ9M/MJxhIm+\
wCO6iDCIR5h8SDsHgZlam2wU1+VyCewc/1/melnBNcPm2J2b7B1sbh6qC/vHiXSQjr6H3Nt3L//\
EjDbxL5LQz/JhwySrKHdgsbfjg2yIOxzypFhF5uUdboHY7xNDrEI/\
ozvfhb5sWwRqkxYUL2LUfmpmMKWKjBqDbbKgGvos2BmcJcKBROnB0Rnbtr8l/iMsr2SDAPOk/\
3UeJuk5XzbubpLYCqPh4HuYoLPpa3hKZf+BURxucA=", 5 -> 
       "OEM6eJztVktv20YQDh3JiWnVsdvk0FMXRtAcqiRWfGqCHPQwEgNykHqZ9GAE8IocioSXu8\
TuUrJg6J/0x2aWImlKVuEaObQFcrHM2dl5fPPNzIaOfujBpRkww8Jt3RjG2tBfPUl8mYxiAcRMJeEo\
1G0ykxnxmSCZRnEEJHR0ow+c4++DnrzMTWzobQ+SlDMDKMLPhcUtTzGhU6mBPk6Zz8G8VhC+\
vJZu2yBOIRzG4oIqEmbCN7EUL8h7UPBME3QLlwwNA5EhieS0iqYMlOVh2tNYGFCpAgMB4dJn1pAm09\
hENSV0K7RUOopT/Zq44f1bc3EWuazLuql3BzPBktg/kUHG6+p67x2XI8bPmTHMjyB4+\
hQNb3psbJUaN205evNUTu3hZuWwlGzckNwvAH5cS3pY5kydt2tUnauasFkIW/\
vlLdLZp067Lni1KjhEwZw6b6jj/\
qPgWnWw7xCU07GOnYP8b6fyuey2clIQIVhcrTtp3GShc3ZbELcg217NCoP7Qh/\
2I2b6MgDaPBZpZiwop0gI7faYfzFWMhMB+th6p9hsCBPgfQc/\
Hx1NQJj3TAQcFDKjDNgy0N4eAGczCGjrRGLvHdl4IMDDH/sySa3Jo0uMT2uMDK01/\
8hisGVofgAIdBkC3ftT8lCx5NzGOJLy4lw3PkgBYdNmTWfJSHL6yw2l8p9u3pB0r5vz2ObYy4xBBCx\
5C/avI/s9vXM0YTzLgbNkp3856yAlb8lVnYRtUmdg/etwf/7GrYNvr3ba5KBNOnji1omAR1XRz67W+\
W0vjYL5F/qggKCq3eYJmEgG1P2oAOeBiSdQne18ZFrn5dMDORV6q5sZmaBlv1JpXat8SnXDUxmsFFb\
/tDQ9PiNaoBG4kgSFHWTGOBbj/MNa6Got/\
TjPoiryrkXYk9Qo1PRmKdCfjwVHNI5t6sy3wdva5VOnvNSykiET44yNoZ7/UpC7n4RmEwg+\
MxWzkY3h70ccfVI2Qg8n8EU5RukPS+\
J13bHgJDWuF8V2aHNOxhhzPu6L6T2NkP8E0BUBDgkCi0tAGBYjiVg18UnKYmyTxdyPjUYdhU2CtQ4Q\
mnrRiaUn3G0JFIOb/n61QtrOvF3nsWXuwbLoMNeaY6kQC6RUKBUSxuQdfeuwWEuG7sbzNYXfWRS+\
rPbzlTLf++YaEbfLkVSCWVLx2bc9EE5Y6kUKWLD0QLiWLj0QnlUPBGIkQSLECE/uUrMECJY54+Y/\
utXvsq+u01+7r4qt1f6+yv6tVTZY2TVVwc6sANv++\
8b5v2yc39yexE2R5MgXmydVCI9fmywyM9gKL74CiAKNVA==", 6 -> 
       "OEM6eJztWFtvE0cU7oKdEIdyVR/\
61GmE1CI5KbyCQFrbAdI6Ls04CQghMd49tqeZnXFnZpO4ES996A/pn+vf6Jldry/\
JEicrmoCEZCVnz5zrXL6Zc7qeudaGQ9tglnWXTKnJjaV/e21FAg3MAmHEWBbsQUg6TJOeZoM+\
6WoVkaGKNQlRrepIIgFFrCJdro0lSveY5H8C4ZZwiWxGukpHzBLbxz8Bk6QDBJjhYkgGQlkL4Rp5jX\
bcUGwA5YB0PVOqgxD4f7GmDpMYr5jlNkQDgbEhCz/TkBefaxUPakN6Z8ACAfaRhu5PGW/\
ZZbgF3SaXe/\
Qvj3RjGViupIu352QSby4X0hmmnpMsQEAE0pIfhQqYU7hPmAydgCQmjhJJA4FC3ljUDJQ0SuNk/\
K465v4aeQEafjCoSOCQYeDwiFS6V+\
cm5qWJ5U1B2dxqDCWLeLCpwlhMi5vbz4XqMPGOWVy1PoT37qHhhTbrOaHSSVueWdhSB25wceww41w5\
wbk6mu2SmyvqPckZ8o6mmH980MKM2NjsSru1Qr0q9R5Q7z0SZ1f85XUhxZsr25Lj3iPU4rybgs5bI+\
cPL9P5uRWfNQsqtl8VVKy3LzrUjaKKmcdzLmnhyfkYeyHXxrkT8Itl/\
v1KCw4QwfUeqXM7JJtgtRoowS0in493yUVv78K79OI9XuKewUPpf3Zn69yKm35RxcZFz6q/\
VVBxt6jHX198Ngel8D2wXfTmaf1cVHH9Et8ElwoohY93wcP2kZ5R9YKKjXrBdGlRj7sbBRV3ikHEJb\
9Ti1/kxc7upZ6CU5zj7zH1Kvg7U422nFS2EDZOlGql4zWz92ZqtDxb4+\
VFXn7mymN6ZfUpLTWZS6VKy21lmaDe27woM4/XakzX+0zbWZf5Ied5Xk60m6wDwiT+l/\
zYqgiL88C5vobDtq5CoOUNOYitm54trJBNpcaCPWddhmh16blmwybsg6h7+\
HlzfR9L9xdY2gvQWCpn4bqS3Gk3QLAhhPT6pooNrEuLFX2Ig3fqKho4k+\
uHAw3GcCXRWvm3mINbkHILIDRZCPT2rhJdzaJ3LsaOUnvvTKmlJHTLLk86jDpK0O9OCGWEn3Qs6G0/\
KexdjrXYWiUNai+O2gF51f9X5sb6PhNx0r9w1T/9dyHpdDwhR0eu3q6SB++\
r5MhV0Bk5uwUzbssJPJwnkJK4+zMSj29GYv2XI7DRnOU+PK6W7+\
04N1XzJxbm1SM5YU85zefOjQrffWfIKyU3/\
QnZyLOAb8GM3J1w8b12epBTc7s9mXFEwzG5PmclT09zks8k8A8I4q06ohr1TIWOeXiRjagd/\
3QzrzMqi2ySz9wQTw6/f1ypTEENHoUREr5J+\
5kJvJHVp8SBW5UkyPYWdTL0ejOlXCVTkOR0xoD0li6OTvMYhhZwF/\
ZVSCsvNUA0sHwfxmM3XjJjEiQyDXUgzQTZxiLXJyLbA1Nq6xiOYZS5O9MZ3MGDDwYxIMOzkR0EuR6X\
veTDWfCNUQFPIGKMV7ccWLQVtRol28MB0G83pOASNhwAssAF72Ao6ShmStcdp8lkL2Y9mM5/\
Jshb29KwfQh3mOas42L4cPuSfpNhek2oYC9rkdKvZ9h5QJ/CK/3Hq7T73JAAZckBFyK/\
sx24VcRx20/aulnH1xDXJkbG4So75Cbr/\
xLr9gSRcdQBTVSXzLZ9M6VhorRWqfgC50wyN2dimDbMCza6J1fo3alO95g50+p+\
Mul0h1xDYMVwkmFyCbgvFdu0C47r7Pr1Se/7E21Sz3lInOHtkr0gcAnSF8zSCk23wcqXJ8f/\
9eSojZEznIZMtwYOMscr8AVMP3Ew7adYegxGecQFQugJOK2STmyn0VOkC5uodwAFDYqPsFJpjtOIoO\
q2yNp/fxnN+Q==", 7 -> 
       "OEM6eJzVWF9v2zYQn1I7SZ2sTVpswJ7GBQXWAm4Xv7ZoAUVOE2eO14VKsqAoEFo624JlUh\
UpJ4aRp325faI9j5Ql2Y6Vf6zbrkGQUHe8u98dySPvWgZftuFcVIkgrSVeqHtc4EOboXbIogCJDqA+\
8SPgckgE6pA+oE1EqBuzGJ1iVBCHgIREgD8oowGLkEMoijjEk1sGL1jg+/L/\
0hY7jy0u8BUbeoEvRSRJfo4ALO0o61sD/Cggjg/\
iZQit31LaisJ7AK26R7v4BLUi6giPUeRRdMz8Vkh6qE5oOyJteIF2IYRfuQSM4JxIQxJzC3XYWYbOZ\
RKcx9GZJzqKGCJXAnuJSq17N8I1RnDzHCvyteqAkp7n7DM38ien8/\
UdnzWJf0qEIE4H3CdPpOJFm7TVpMKsLoMvHrCzhJkYTCkLM5R7SQwLyg9svM5hGcMJ4t/\
GlSqm5mV6N+zGBjbK2NjExoUc3F7w9xMtwYcbh9QT4CIsZOC5pvFGYrzyNY0ngtgo4WWU/\
Nxey9u6pnn7L01By9YU1IZa0xVMLd5xfWeCo7U289gluTru7I2pF4ZfNhpwhk5Y2EWWJwZoH0TIAuZ\
7QuZIMwQyj/3b0Dv/n7B/\
v7xFTcHrNpBmtC3zmzuCdxbcN3UFq7oZ0ZzH2pgHmuaPdRf1j91v5ghp3x2H9lyy1J5upLa/4gvj/\
5N3tLOA5pmc0wvN0hSsWpruYmse0T6uaeI+0sskn+U9/CVeAnufHu35+\
K55Pq4xLn9fKYeMUo7cSlzJg1udKQcLl6tt4/3VdWQezkKdyL8Lz9/g4lsvVMA/\
4GWrQ4TFXMDFGg0ioSrUA1kA89IWcboKC3Wlqvs7IRnUoQ++\
ZcjPh9t9oGKXUNeHUFbCWaUrK24lXQWfDMDFq/ss4rBNhSzrXcl8ZLFeoFRunwchcO4xKrUV/\
4w8UAVtsQHg8hQCXk/\
6A6cKY5Ox7ikvNBiFVlE5hwe9JvPxzzOT0oEZ9xnwuhnX7crHrUgIRrmUXkqq/bzi/jv+\
YFs1UYgSV8U9/\
ndRBRW9RsOhqqbLaPOijIaqPk6H02udUhtqQuWmCWpYSvf2UO23lC1PTzqUlV06nJhQq09TK9NiE1r\
z7V+mjuTNsaqbqoxY0YSZxkke+HzqxDAP3YRW+Yi7hcej4b45HlbH4TNntcpHXco+HhuQD6/\
LsMdQx8EfqtfLjPd7KVO+LWIUua5N6sthX94LsZrUlysUyuswGVWtVARbM/\
rk7ZNMOzKv15fjeurd9btqEvQs++\
JVqTSR4OSRSpLZe3XCykhlKPT8DYrz0we8lBzuLCstyi3YYS4uvQsBeoHw+\
pDxHrwjnMeJiVfZGeX3zUiwnjzFTjZldTzlMOAFO4zgUsrij6f6gEdxM1WmhDS9JXpkzmt7tB1/\
KA0m58zx4oyRpa81lTtshkUoZ9qDAPBPNep7FGoqHxJHgVdZKe4fpkKripL2Qyf9nwK5dkg56YN7RE\
KPNBWGq5uV+Ic0xW/5zOmmDVH8/RQ5L++Psi0ulmzVDr5Lf/WzXlk/\
psBH0cwcyq6ya3z5xxh1ynnc4o6zepNwuUcZjSkcHEZdBD705CZRzWeQYUQB8UL0dBOxEFWeleN+\
eggiCmncqibjxR/1pZWmLgw4aoJc+vgzot7HKGvOPx315CvPstZ8whgL+\
Go1FQCHhfKqDCQsxUqQ8Rf/AeyNEA0=", 8 -> 
       "OEM6eJztV+tOG0cU7oINYaEJpOqP/soERaoqmQT/\
TZRIxlyCaqyUWdJGyBLD7ll75fXMamcWs0U8UN+\
l79JX6JnZCzYsIbhR2kqRVjBz5txm5pvzHfuWfODAudpmivlLstYJpKJHjiD9WCQRUQMgZyxMQOKQK\
TJgZ0A2CeOeWRJ8aqFJJEQsZgrCtEFSkRCXcZJIMMq+\
JWttCEP8v7glzk3EObnswCgK0QRFOM0SWNzT0bdS+jhibgjqZQz+i0K2rPM9BL8T8CF9QvyEuyoQ/\
Dl5CzH8KDE5AucMncJLYvvzdwa1sqBV6dXl6nbK2ShwD4SXhJPqcm0vFKcsPGFKMXcA3rNn6HjBYX2\
tVLvpy5ILh2KcL+YBC8ncDcl8fhI1D22p9bpiybqYEP50q4cptdLtutNdp1aDWpvUusTBpxv+/\
GEmw0frRzxQ4BGq8NzljMG7efDmvxn83oa7nRkNnd9mNGw7XzrV/VkNi4j3vNKZD+\
dzYKHSx7030Jpt50/XuzAmH0Q8JO1ApeQAVCwiEQYKK18rBval4T0zSmeM+\
JEbxO8VtWz8KuyWDaeBt32jpNau8451fHstrsqz1mH4d27jDa3vBrFOvEcftJEY28IDWt/\
nUaJ0lT9EEpH2FnOHOhfuoaulvZilHTiDsG3h9NHOGXD1Fhk2hBjZpGQLZC1tvQ0hS8GjKwcCiXWHK\
yQ9Dxcft8Uo0i53zqMYpERGRG/1X5IANCvUuwCeLFKga7+K0I/\
Z6ETneCrE8ETWusjmfl1vjqajUxHSJzeUikHLMC5daxnu03vcSpQSXGrCyxmziiC/\
kQ93dDvBtLkmSPrXnD5U8ppcXGhKapDNywa50CRTDKfvupB2tULzLoVsiBWmGCJUiyGWyAqF/\
c60tHndrDradWlm1rrycNeTrUh7Imj3Y8dx+cq2J5CNZ5mj+\
FgfbYNoaJKNN8QAs0cX81st4biA2QyER+\
13MWBbpIIzKNcevmNSGkTKbTHmcqmVKDHC63NLlZUrlaNI1pw4gWtYld9NNVHvTT+\
JWChwnftBsPcD3jcT7aElpXADA5USt6saNI6gKkZNJ42A/\
rDPw4DDvn4IzNXJazia5qswWtGSDuP9hPVhcv9TSa4ecYlNrPeexQE71Tnc3unR74u3vRUKd1h0k/\
TbKXHVg8+eGf3Tsp1BIMk4CEPSx6RNt4xgYFebJuMBvm3TOg8hxb4WJxDgNMYOXMSk2Sj78LxF1xqh\
zpgIn0iDkNIhYmaMxqguZObwuW1jn+9iVso44cnoFH2jqQpGaAm42cwLdvce2ZQmXFP+o85+\
oa3jSbo20djnoqm+fqPs6/FHRpaKwfj/p8ufv7Ujt3+HWOSbrqSh4pCmWKhWyWLHhvl65qvivCVE2+\
cL1cxDfaW2T6C23atrxpqcDY4nTvR4s9ezy+upVmn2vhbs/0TB/\
qOyYKuxmKzYsqpkZ3W4slbrqZvdPlbdssASBHkE5mjCFKt0BxQZoUcuxiTwTWCOkEftFKtkbBgBs8C\
dM+7C078BzsbCQg==", 9 -> 
       "OEM6eJztWN9zEzcQ7gU7gAmQlP6YPnXxMNPpjBPCKwwMjhNoWseTIkPLpBmQz2v7Glm6Sr\
o4bib/Q9/71r+\
0qzuf47MvJPG0wAMznuRO2l19K33aT6eOZ6418chucss7N02hHhjLVFNBKJQFDm0VtQRCi2voah72Y\
BDYHtgegoz6LdSgOmBCJY3S2AYu2yCVXD1t+V21DHSUBuR+D4zlFiswVBH4XEJkMA7V8UyhhkLQ/\
6sb6ijGsmBuNLEfCnKgJnpNoF3b4LrW49qyOyH3BdqHGjv3x403XC4vsFMP5AEbQieSvg2UhEDCL0p\
0NO9DnctuxLu4Bs8CbWwFKMh3BpTuchn8mQBqEwLysQoMhlwTBhA0epLJeek+\
hFLnyrkJeUlCeakXzfLmUPJ+4O+\
odiQmzc3Kc6FaXLzl1tKEYvvePQq82ORdZ1SYjeWZxRdq4DoXxwOmLQszLVdGs1xwE8C8xzld3vFE4\
/dnRsiYjcOWm40y8yrMW2feCT1c3PGn13M53i6/\
lIGlhWGOeWbOwRujwR98yMEv7fisPqdj89c5HWvN9w11e17HdMRLLunck/NfcCE3xqUTqM6X+\
d1yAwfwWukDqAV2CDtotQqVCCwV8qpG/\
r7pPTdL5xzxHStIv0fMK9HvQtX15lgvfiS5yJbZwsimWOMGqW/v7Op8YeTem4kF30+wXgjoMokb+\
yBY10+xXiNltzXVRlbclmFkHd4XpIqmtMH9g65WkWxToOvPNR/\
W8RBFzaPX21uHKO0PpNACNcljCtbJsPPeRMGH2GZLO4pOIVvSIqVInZ/XVD90IbeOQo3G0OGBohV/\
jgJ0M1RsILZNCoGtjA4Vbx3GllIHb02hoSR2ii41Nuy3lGDfzhilD9X4cMJWqrGYuxw3Imtpvp2Cj4\
4AeYr/mbm1dchFxJ27U3z215X4yPIYjo+dxlZg/aQCx04108csedPWhjN4cJ5B8kglM32kvZc+\
Us3PMdiuZ1sfTLvljzbdmrhVTyOcV4NyYE8MmrbmDX/yqFTK7EuazJjXe25myfuNw7D/\
qDS9J3Ls1smOXR0t+5iviwS3p9qstKuRDoI2OMRx361dbkxMWbOpBtJcr0ZW9Wl9/\
bHJ0qnJy9AUmjrCKTKbO5lj4ytiCBoiS0r8URzaDd1AduMXF6FqjPKDmEtjYi87VjUVs5osm8MQ2Tf\
bUgQSt91O4b4D7/gaHzdTpyXXkh6vJ/PPgFx+KQ0/\
xPYrrgPechjOPtuyL9PNvyGUf5Cen9nNTHNeRUj2IVspNdSgAgMcf2/\
8T98aZaCPBZ8oaEdfEFPfTR/pR0FhJtVMFS9e6nyfY7ZYR9m1PbZw/+\
mM7OVpwqR9jvqcodc3Yuh13kJh2MLqk5wEF3cF96ne54nURbVpuTyGAw5PfAT4okxEW53pcEhZcQOF\
GsQ6lgd7KYGNXSS+OtzsdNs7p0/KdwHl+8dLqbt3nJAH7j+\
FDNUqcNoxzSnShQnywOoTSIiydzy92BXIW2nyjxd5P42TrKYLNF7L/\
U9a8DFowd9eqdkLDPhkOyrVBuxAuSI9e0dFHqDR7QSaZUr8zDuv+IbL3QQ5A0V/9Lv8Zq+\
L1qB5uSuwTLX7akKZJtsz4vQbqDC+\
Bgsdt00MSSSEn2Z5nEke0aHlaJ5MEU1YZZzyJZBnC97XM9BHHRnsIsXO013AhRgCWaKOV5CDiP3WSq\
Vt6KnQ6S+tcg9FaO7SzrfQRziQhD3oxDePPWIcoXe3gzperj9oa7ghzNq/MNzVaA==", 10 -> 
       "OEM6eJztWe1v2kYYrxPIC0nbdNUmTfuwG6o0TYI0ZOuHNWolQrKWjaC2R7tVCC2HfYAX47\
N8ZwhD/DPTpP1D+4P2nM82NnEIsLXrh0qRYp+\
ft3vu97wdHY1vNeilOCGCdG7zTM3kAtcbDOnMswUSPYpsr9+mLmIdJMw+\
5YgSvYe4IIKiHjHQAUfENlCJI04d4sKyNSqgEfOQTmzkcYo6Gs9UqGXB/\
81jdumrWuM7Ddp3LCCHJXhVmrMVqRbvOUS3qHjs0s5DtbIjjXxFOzXTvsDfI2Ixu4uGpughhwhBXRv\
1idB7pt3dR8+pS7/mqMeGkRkGQ6Z4jHKd9RtN0ZQpaUZn+d7JyCZ9Uz9jhmfFyfm9ZxZrE+scrAH/\
UOPBAxC80SBdSZS5KkvjG6/YUH7cjRSGK2tXVtYD/2QM4MXak5RP2ji2+\
M21EhJkkdh8o57HWgFrB1ibwMPijD+9XYnxbv61bQpqICyBxFdUXg+Ul/5P5Usz/\
lBbkbHxy4qMlcb7NrW6KmOocckjXdk5/wUWUmUsvYHyajv/Kl+nQ/SWuReoYooROqPCZQ6zTAF5r+\
xS8r7hvTJKV9Q45wTh7whrOfhbKLtu+FWNJ/NrJixNoIXZWGumfAvScjPN5LTF9bJlhWfdCv+\
WsTT3O3WZXxmvs1aVzVTtgbUpDl7U5cpRv049vfbwKMWIzTMqW4eX6WZE3i7grP8Yd8RCXthmNv0wn\
FB6J05I+iFk2fHp5u17u+ESmzuM02swef12+\
BKBlwBhIXEaKvZaeKvSI6LCDIqzVdvxhDzMV9A58dwx0S+\
6LpAbIHn7mUtGNTqgVkWD17unA2qL59BWWtSFFircmGzVJPcJtciIGnj3jEF/eWpD/0cN+\
PhJhfUdKfL00nEp5xCvIC370jOpPNVsnVKDhybgez8zq+OS/\
rm0sc3YxTnP1GEPnazcKx7128zCX14hCh/KupD54F7Zb/\
jkHo89IZjNZZcXtIlpXeEtfud0QCyPSHbZFeI/\
fCyiJ2g8ln1YAR1MCmgsO6vwMZngwtW6JCjdRKAeoayGj5Cfw0foC1IIqrXkammWLV3b7KpiK08l3F\
SnUsyOKa3Pc8fkKJdT+AU3+om6KX3abEKiBfWtVgsIpnAFIv/\
BJwKJKpKlIPTwCAUB21QCC2rWkRIigF/\
HX5rPn4tFLoiIorQ5DknHUxsLKFI3mbTwZgDEKII2wIE9ZuDcC5fC+CLMAY2+3XlBOPeDiJ+\
woc23y55gMCCZekSyOyV57fBMw/XoTHjx+4lh5w1glnKAbxiKgRyIzy6MXf6LlFDmnOmmj+\
4o1PYkzhsMCxcoGyOH4s+rtmXatCpjl+jSeBlB/pAUMu3KlRqxux7p0vj+\
E0buvbY5GVDjDXFN0pY2XD+R4U/DdHRsMf0inPrw7cRyWo5SmQF/\
kWv0TA5zp2WhLtjsz5cEWaAOLT5aJjP4Z6Fy5ZHIqCh1zrEnr0ZgOaXrClUd5sYG9OUm3mBKxX9r4y\
BuxyWJ6WmqkO8Hk2lmGH8bfa/Wkt/97CXfcwiFazcngJgAP96lAikgUOJnxxiNnx4kTfA+\
mxjG3yn2w8lkAiAEh0KwgIv68s7AWKQYpcK8vFZMgfQddYAhjoszAL71r9FXzNVjVxo6eExQQJ/\
BPMA9ahMXdV3i9JDHwaRlbl22jokLRrgC349dvESLibuXRzdALrp+\
ARPpJQFlS6Lwvd27ZK7sPtEsbV3pBjOpDdjyTf9h2OOldVo7vik10qYWx2vFp+9Af2me/\
l2ln3Yp4G7GgLnd4Hr+wB+91vOlvBrg0tvX7RcWU/uT0vGjfD26X8QOtE8Mejn/RhEwX5yu/\
MjaHLVHKrbzH3vLBXvLv7QQ3c0YaoK+\
6LDVKqAY3lDxKbpKVZpSKVRIsjGcdgHBUU9kho2OVH5a6UA/NjgfRIPz51qsw4kqjCwtugTANPer+\
3/wHnTczPaXLovk0lQ/\
Boghk0yztQG5VMYOHIksUMnfFngCKjZAZbryG0BlPwfVT3Y0VTsoPgaY1mYDWkBVBEft9Sl8IOo3C3\
+gAmNMRaxKvl86HZcNTIMa+6jakQtunBaKqdnpQMTbIuApIChghFMEVRGBhgubDff/AYo9FIU="|>,
      "PageCount" -> 10, "CurrentPage" -> 10|>|>,
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.910124347245867*^9, 
  3.9101243507323055`*^9}},ExpressionUUID->"ea6f5f7e-7791-4f4c-b042-\
c36656f24ed2"],

Cell[TextData[{
 "To create a density map based on the count of each location, you can use \
the ",
 Cell[BoxData[
  TemplateBox[{"GeoRegionValuePlot", "paclet:ref/GeoRegionValuePlot"},
   "TextRefLink"]],ExpressionUUID->"f61ace62-da79-4f75-b441-c8f3a0338ddb"],
 " function in Wolfram Language. Here's an example of how you can do it:\n\n\
1. First, let's assume you have a table of location names and their \
corresponding counts. You can represent this data as an association, where \
the keys are the location names and the values are the counts. For example: \n\
",
 Cell[BoxData[
  TemplateBox[{
    Cell["`Wolfram Language\ndata = <|\"New York\" -> 100, \"California\" -> \
200, \"Texas\" -> 150, \"Florida\" -> 50|>;\n`", Background -> None]},
   "ChatCodeInlineTemplate"]], "ChatCodeActive",
  Background->None,ExpressionUUID->"9b35b04e-fc9f-48f0-8d7c-a7643444bfa7"],
 " How can i do this step automatically?\[LineSeparator]\n2. Next, you can \
create a ",
 Cell[BoxData[
  TemplateBox[{"GeoRegionValuePlot", "paclet:ref/GeoRegionValuePlot"},
   "TextRefLink"]],ExpressionUUID->"535ea5c1-8407-4a03-be4b-9bcd4bbcee74"],
 " using the ",
 StyleBox["data", "TI"],
 " association. This function will automatically generate a map with color \
scaling based on the values in the association. Here's how you can do it: \n",
 Cell[BoxData[
  TemplateBox[{
    Cell["`Wolfram Language\nGeoRegionValuePlot[data]\n`", Background -> 
     None]},
   "ChatCodeInlineTemplate"]], "ChatCodeActive",
  Background->None,ExpressionUUID->"fd864849-3a63-48b4-a7b4-30b470e73391"],
 "\nThis will create a density map where darker colors represent higher \
counts. You can customize the appearance of the map by using various options \
in ",
 Cell[BoxData[
  TemplateBox[{"GeoRegionValuePlot", "paclet:ref/GeoRegionValuePlot"},
   "TextRefLink"]],ExpressionUUID->"1289065f-14dc-432e-8bc4-41f939ee7096"],
 ".\n\nNote that to use ",
 Cell[BoxData[
  TemplateBox[{"GeoRegionValuePlot", "paclet:ref/GeoRegionValuePlot"},
   "TextRefLink"]],ExpressionUUID->"9b3d7363-5a3e-457c-9db1-eae787742592"],
 ", you need access to the Geographic Data paclet. If you don't have it \
installed, you can load it by evaluating ",
 Cell[BoxData[
  TemplateBox[{
    Cell["Needs[\"GeographicData", Background -> None]},
   "ChatCodeInlineTemplate"]], "ChatCodeActive",
  Background->None,ExpressionUUID->"ccff6149-3fb0-4f75-876e-652d6b122fa5"],
 "\"]`.\n\nLet me know if you need any further assistance!"
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      PaneBox[
       TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
       FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
       "ShrinkToFit", Alignment -> {Center, Center}]}, 
     "AssistantIconTabbed"]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "To create a density map based on the count of each location, you can use \
the `GeoRegionValuePlot` function in Wolfram Language. Here's an example of \
how you can do it:\n\n1. First, let's assume you have a table of location \
names and their corresponding counts. You can represent this data as an \
association, where the keys are the location names and the values are the \
counts. For example:\n```Wolfram Language\ndata = <|\"New York\" -> 100, \
\"California\" -> 200, \"Texas\" -> 150, \"Florida\" -> 50|>;\n```\n\n2. \
Next, you can create a `GeoRegionValuePlot` using the `data` association. \
This function will automatically generate a map with color scaling based on \
the values in the association. Here's how you can do it:\n```Wolfram Language\
\nGeoRegionValuePlot[data]\n```\n\nThis will create a density map where \
darker colors represent higher counts. You can customize the appearance of \
the map by using various options in `GeoRegionValuePlot`.\n\nNote that to use \
`GeoRegionValuePlot`, you need access to the Geographic Data paclet. If you \
don't have it installed, you can load it by evaluating \
`Needs[\"GeographicData`\"]`.\n\nLet me know if you need any further \
assistance!", "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJyNV9tuXEkV1UACuMHcBBK87ZhImQx2JxOUhxgYZJw4Y9FtW9MNIUoy6upzdp8uuk7Voa\
qO243mgU/gFf6EH+ID+ALWruorNhJ+SOy67Mvaa69d5+QnR4POSQg6RGULDnsnbXS1irqQdfx+5jz+\
DPeGvmUs/VYFvvKubuLO0QenUxVPnY18E0/ZGByBsaBtddbaImpn/+fxKxfiq2tlWiXH7jz+o+\
3jnpvb/n8oJ156fc32wkUeOzcL98+UCYj5B7L3ORJ0ftFjW8Xp6U+x+nJhVa2LrRy3DX7/\
zPOfW7bF4oqtMnHh//F3+fnnb44G3z23hWlLXtrcubfXVzdDN2Mbdpb3++wr7gMSVeGfJZr3+\
65kM9ivmnj0i+7zo9j6sTsafA85Brjm2673B1M372ura/0XLndc/HgQPSMjW122sWljn+\
PU7R759pDrhr2CH/aT9PMvGL0/dM7sxvudtPTKqrGBmxWS94auuTr9CL+\
8VFGd4JdvrVKafD3c6wGPk69h1zvDg2+ERYhcHw2+WUjlbBz8bf+\
ta0l5JkVTNs2kNfTGmYlXNfWUrVoYIrXkYiSUh0s6BUS0ImjsEkx4+pMbkw4UHZWO4pRp4oxxc+R+\
3Ol8QpeTCfvbpkNbIdLELhqDxyU5S43na+\
3aQNoCtNDF9c8RG030DbH3zqelVzeNUdrmFaqXSVPI3tsAd60t2UuQZaA5GEdz5Exz72y1bcGl4iB2\
OVKrBY2ZANCklWaRjLTlGxRJCwHKZDpFkCHYuJvrOCWHPz0uNboIQI4sc8lll95MtWFaAO3QcKGVAV\
tg+BYkh+lMoWyqR7ap7CJb7HY6P6PXbEEYQ+c2RN/m1hSI30yxcQ3nC6kH+\
NpgI2USkSWCobFxxYzcBGslHIUW0AEj0jH7iVPPjDoUMzBuhhuylxsrZWlWZZvDFammMboQOh53RqP\
RarMjxmVBQvI6MiCFbSDoRX6k0hnYnhryH5OPdSBwUudQSrBHeQq6suGYHt58+Yx+Tosvnz2E1fP+\
1eUXw5OL4YOdnFFY8abI4D8BaJUIgR9b9gR1ka1DOum9OXk7IA6FaniNgkoXg1Fh2gVHVN0gQzqPQC\
2AJTXT+4cvXnRfPCfxjMroOhd24iAoUQiztPh+JK7fPwSjHfhjFg8QfU/\
bGZXacxGNlPV2U5SuaGswNakvjRdLvHaaisICB26O6Z1RYzYfPm5UYTget14/\
7hLUE4DnyDt7n9C7oZRpfcjz5ElaeZw2144vkc+15vn6YNXqkp+s9lfb+\
da5NCcNUhjrCxF65UHuJ2k3bz5echOUhAaghyT820qwqMfQt01xcjUTI5SQdxcVAxS7dGkBYdIbvXX\
TupgYnrrllqNBXKARX0tmMMKpdX7H3KQrIIiAlgneOPAVKOHA79FIk+\
UcBLNQzwpGRdnhFpqqSmmrRkZs2YJ7uPLSpUBEPMG5yrgxLl4roAOTIXvQ8VFIpyzLbFZ+\
gYtXCSeqEY6/\
rQ9roKRx6jxQcKkvGmF5vt6eqmu0MkuflhCgRLQe0oOEZYGYWTfHJIHFAkWbTKhUUUTBUTFlNM0u3m\
slWxWzwGSLkn9jXAyH4oVck5U8tMVUbiRq5kgNVywyjDBqNVvWlVXQSSy3lHozre6JqG7Nqn9/\
dJ6zUhQFQ0Ecgpbjk8mUPVnXlR3pygAPiGR9yBVF6zNR0EvIFxMn0se91X4BEYpon3Oay7RDXClL8T\
h33pS1ap5U7OS/\
Es8JHRdIpqGZtqn8YCHwkBhAhGvwCwYNOhFiYBJTutylvsOw9XyUYlm1NTIX7EvlZ4LHNN9sfXeDxt\
56Cm9B8te94VaM2zGth2k2hrwkwh04NpMGQKdzo9fsvuAKe3/A44+vUNnRmvZ3DasuBrPnRwL8Sm/\
EDR5Ea9voTh3xBPgUqqRR4kNQQViPdNqlbv4fRUV02iMPn8daKcClrEJ6fiRP8gqVR1rMciDlTcoh5\
A0OIzcnjcbzOd0ZL0J6+6TZdqdTklcwb06tfO4ILGbdfwPTSd5/Tb/66uACTfnW+\
dkBHX1Gnz59ekgHp+ADhoXVKi0+S4tD2Av50HP5+wzU0WU+8fzpV5/9Ms3UzrMuXSSVWwG8Lv+\
d1duMjpGENNrGoktDAWpd4Lk2htTqxakMtLVKb41kXliV5uMuqXeItkRr2WA7rpZEuYMad8F3O5V3E\
v6HjEEKO0V7J/dzhZfNlKINW+SY6mqa1nfZU7T4cpAnfA69aVh5+\
fzKjc25qVajWGRcHqgrwUPCd6GPASSfPvlhKSoX7u6xXEzRV1KFDAI5LE5xFnOmmeqC5HlPecpCoCb\
pRunso5jbB48XGUQoGpcbbhin0usOgfPyew7Rjy7gKbw72FgX46ODDxJwD4qIvpTpQHqyFRjmy6T16\
XWr1h+nD/Bd0uv1lx+Lzg/25ePgZCNVneXXyFBVYe/c4jamevkfKXlLVQ==", 
   "PageData" -> <|
    "Pages" -> <|
      1 -> "OEM6eJytV21PIzcQ7nIJL4Fegevrp7ropLZSyJUcbeBOnASBlkhwR3Huqgoh4ex6E4\
uNvVp7gRTxrf+lf7A/oDPO7mY3hAOkSkiw4/HM45nnsQff0bNtfmV2mWH+\
M106ENrQf522Im7EmeGEEY9LLcyA9FlIlE9YEBDT4yRQLjNCSU06A+\
Kqfsik4LpKBiomlyoOPOKLSBsiOfeIUaTHLrjd6CoVeUJCcI3xOHN7WTDCNLnkkAF+o6+\
Qvor6yVJHxSaJkGSrkUpln0f8e02YJPyK9cOAY9CeurRAXDBPPEishezaYJ1YBGZVSOI7utSE3PB7Z\
kdd2YpM6fk2h6AQAEzwOSzQl7SvlOntDgPug0l1I9an34XMDbh5FXH/xR0u81jtY+\
4fCHlOF4gfSxdP94pU/Cf35neG+SchLevF3YFkfeEeKi8O8u76q+\
fo3VTSQO4zZgyUnHvPn0P46TbromvpdkRHTx+\
rS1ycy9KmlqlblidJaeYyXlBna8K6c50zlu8MU3BLjTMvG7VGY32TOtXbWKizSmfX6vXa+\
trmOnVuik73xF2v/fRzvf6RuGsbtfr6y8Yj466v1TYaG2t3xp3ZaNR+\
qW9u2LDw85o6lYdVOZPAw6tM51eadteAbK8ApNz3zth3cyWD81BEJQ84UwRTSpam2z2QoEedk4/\
zZWr1TeFgp5MQlO6RYCFJuQhuUuPmjgJljpns8mH+\
7dgovHDcye6fNlWgol8T1dotiysoUR4xE0f8kIUriHy22WOmqTxOyy0ZxgYrdwyy1JUd5p53IxVLD8\
LP/RaxwQG/4EHTgc/\
P9i64NPtMegGPQJnpafEewN27PGAD7tGFQxVrvgd6jrgHi8vYOAy5dxVGXGuABtHKv8eCY6/Kb+\
EO1ikEuvSHCnyo1Rli7Ch1fqZLb5XkfhkPTAf9jgrot7ec0j+\
2h0df2rb3CJ5xJzYGGoiXR3IH3X3lfKKf7l2wILY9Rx/\
699ToKdki19eJyKtkNVXzTZVcJxJFa6JFtCYCA2uipJub15WMQhgux/kqyRE+\
99FcgU0VpAhsGHL1ZARp9c3ovTkFv8m8O8HtVZKRCbdlVKqSAmtwbZwzp3QmKXjGlOlDbnrKo5WjiI\
OzERc8W3t6xLS2ZNG76lLqEW0zl4WRy/\
tQl9pRzMdopJ8VXowP0BWuoUEp5ZI4wMMuPJb2AyNsa61cYauTUWoRO9lW1ETg2R6EnH7TkoGQvIUc\
ZS6CR6bYNybdtICWA6hWzEB9ufMXQC6+lxpGB+8DiwTrIIb7njX6RSq+\
HWjjefqAgnbz5kmKHOqALldaEmYDodORokrAe5aagX1XC3dWu0VbBDwZCQATzh75+\
eYHSCxM7MH4IT2YcmTXfv2IfoUhqmodillGVyFmeTGeJQKlh0p6OMi4CZWhnTgVtSH0I8aZ9IJeyo0\
viakwrrzLxhXEAjeQHexYwgc+NspdCtMjwmiCOLmlQIqzVqk8EuL/\
NXFtjY4wnAv12GDYYXgsJW17uoBZEpT2o2uae1c+\
z2EcWQuwlokK07pqbrCsj8k1erTyuUbWQq5d27R0Dcb5ARQAVNoHudpTszCMVBjZlkb2MoMh3K6EgP\
7RlRh7Mr/OISyuFFD+46QlQfIIH6/z4ewPW4gGpfc5HgRYmMHL9REY9mcy//eVJ/xBQc+\
4UUg3QGHCvwkRgTvUttmq0I2BOn3x17AaQxRAE9e1uu7iZrsJ/7PRtf8AI1d3ww==", 2 -> 
       "OEM6eJzFVs1uGzcQ7iqS7chuYjto0B6CEkKAXBQ3QeFLfozasusYsA3XqyQoggCmdmclVh\
S5ILmSBfgJ+gJ9jp76ep2htKuVpaTJqSdphzPDb775YxLYtTZcu0PueHLfVk+\
FdWG3rVlkgDtgnMWgrHBjNuAp63ALMdOKuR4wlQ06YJhOmI6izBhQEVj6BB71mHVkLhR5QN8WXJONd\
cYirlhmwXtIAlttgZT4u3qgrz2Gil1vwyCVaI0i/JxA2j4GfQldodU7LjO4kNqFj1IeSXAvDCQ/\
LTlep7guITkVqh/+zJJMRQ4VCNN7LRPDB+yUq27Gu7DD3oCBJ5YhOLjmeD28YPXkzn/\
CCybwlgVSs5uHY8UHIjrTcSbL6nbrWOoOl1fcOeQK4seP0fFKm3dJqbroK7Arl3pEh3eKC3NJZUEy1\
QnrPgeWPITB6yUKlVc3JWntk442Gi0uRaKNErwRVp7uhZXnz8KguezOxjmM2O/\
a9CeKwe5yvdUGZofb3NtuWLlB5ZdhUC8pVz+T/OBDSXFtWcTLrl0jT5h08PeuNt5rI+\
PGct1vW1pq8+u0bLzBZoOSD4a7zMAZT8lyHnJuvE4gT6ELKrbe9O5+\
5vSAOxGFwcdwrdXjrqVjCGsnKs0cZfESi8TWD3jU7xqdqRi93j02fHwKQ5CtAD/\
vHw1BuTdcxRIMVktOEFUlWR+\
C5GOIw40zjS12pBwWdYyH2y09SMnl0XVqwFoMB73VfssEULpr5wCxzSGEW9PuuCKMHa37V7Z6rhUkN\
YozHA86WoY/Lijlf/YndG3t+9qmGA8y57SyVNDTjljWAN/\
Ye0dDTC8nc2qA8J9glk72mr26KZche7rHnj9rslm9kWQXBZPC8ue7N3sv64vF82Hmt8nyiiCDaT002\
Vzq/cmtxDdZnZVSTCpFgj+\
Gq1N2irSunIHr6TisXxhAR04MoTi7d8Gt9Zm1h3qk7KxSCpWNmcrb1FbbJoNbObcP5oaND9Uip3l9T\
P1g0XSF6voP8rBvrY6Ep7zI/yaR39ahM6jZHqcQ/nCipFBwQgXFIwJPafVDKjfaIEk+\
Tsvxz4HcfKssH0L8jhvBO4Th0xMx/C7vkQOpo34+dbEty+JljTMp13C7fkKLSth8pDfZl0/\
0uVHyML9ywkMBpejiz6D4M2DC7xU+\
o5qNetiZfgX2YWyZAWpLzO50a2IigWxirzL0uSwpfeHy3cG2mOxbNJU8gv8j/EdsJFyPNj+\
CHan8LbBTr7e/7gEwm9wPbq19L5xb9n8FTKeeaJtCJBKB1BBpxvc5kkQf+\
J7ZYXmFRAiqyU6eDIEhOiaQZJ1PA/pre3rEuJQTZu2MWh7/kdncINFRZul5xPOLI+SeRs/Xx3tr+\
3xfCnr+ZC7yv4vIEaweWf/\
kQmRRT2tLr7mIbJnFFhsgHPy7QEXRLJ6NjB58i8Ovk7niNZf7VmOm0Zu5dYfRA38JH3IhqemnCO3Xc\
zK3VB+WGCnL5/j4paAjxiHNmfRKxAhBStGM/gsVi4gaj4Q5elw1qrvzLxtnyxQ=", 3 -> 
       "OEM6eJy9V1FvE0cQrhM7IYbSJFVLW6nqCiEBkknaFx5AUCVOgAgH0ZwJD5Yl1ndj+\
5r1rrW758RFPPSlv6k/rzO7d2dfck6TIlWykrud2dlvZr6ZnetXzI02nNk9bnn/\
jqm2YmOD39uKhRq4BcZZBNLEdspGfMx63EDElGR2CEwmox5opvpMhWGiNcgQDL0CD4fMWNoeSzZViW\
YRmjdgG/TGQi5ZYsAZ6VdMtQlC4P/VXXXmYCyZm20YjQUawCV89ag2X4I6gkGs5DEXCbwVygY/\
jnkowD7R0N8uEd8k146g34rlSfCY9RMZWlTYYq9Aw33DEAiccTwKCPdQneb4IoXwYvOE1fvL/\
4qw4hGW+VIz63tTyUdxeKiiRMyrm42XQvW4+MCtxYhBdO8eGl5p8wEpVS/\
aqpiVI3VKwtv5gdnK0oWV5TRsq2nsg8qzOWk1la4cjMZKo7AT/\
HB3zO1w26ptStl2um0rNJO7QaUbVJ4GlTr+rnToTZf+\
pkqkNQsOzoSdEuEMc6fEeOni8o4QQaURrN4N6GgPuZsDvxLqFYd6AeDqa5gS3HO+Xct+\
eFlAHG0Xn3DVQ74MlVD6RUr18rNquwJkVBrIsnh/LFlca8WDoX2p+\
ZSivnwEaO4TPpZl8whMyAWQa3kIugscq15S7QW8tQt480i2h9i8yt3Lc7z06HkBTKMslM1CKGnL+\
eiWbVtD6C3eA+\
FPWdtJrBpxG4d00I3mkNumiiCoHchxYimTR9gYTH2XhycDjYgitLlGkW3BBESzgq9f7U9A2ldcRgI0\
dojMV+pEtHsPBJ9iCm4dKuys+\
9Jif4tQuNlUWN9ocv9srMEYxIzWar8lMVDkam8AIpNBCDbeK9HXfPSBMPaUOvlgqm+\
UhH6NvAymo54SwU8XlLKHHR+TjR3Xz8jH3cRaJQ01sbQLljW9L8zt/\
QkmmdN2anrB30tpA2DPmG9QncXNqfu0Xp8rGNziHzqpUqeDraHB0r7Q7aK+5wBqUk135jajLMys+\
Ho8J60X8o9arpI6H/NqaDAshU/013G+483RofWLjO54pnZSPI+\
es1S9wQrU85K5hQbLOUaynGHdYDVNT86rlUOwQxUF9bca8M6y8QRy2e233BhHLbOnTqWZUTVXuTVTe\
Tc21bZO4BzpzNeFG86HDZOaETS1g6wdxHLgXsjCjjEqjF3OcwKuU/\
bbKrAaNdvTMQTfH0gRSzggRvOQwBOv3M2YbbpFKy0uBwkfwLz/\
BZDr76ThE4iOuY55jzAsvoaDb7Ii3RUqPMmueuwH88tllevrJdisH0g3P2TjRYOh9o3ATt0EMLvflt\
oHwXOmgYqTQlyYlljsqI8TV1+rEY5izeCY9WMBW+w9/JcJKrtzN+\
ampnSpMCn9WclHJWaV56Q769JBjxSyumTtISBJTwEDYClxTnqC1cYeeLI/xOErYhNHFvbA0/\
6hd9R5deWpq3hbfpulyPMmT13edi/J2mPGZ5zcqtffIHbnA+5CW5gAV4Oz2CQGaXqdBKT37vpc/\
P1KIfyvMQLc0sBtXCzSjoSZyBC41sI0ct4BoKAJakBsgB2IFLH7uxxcB1x+TW/\
OwcvWCgBbsxAgxRP6JsAzpdIjLuI/YB50D+wpgGQ/u3T/glF9EUsuxNQFljj8P34B/\
FVxdPZfNo6us28bV1NjrSZx5GVpTybYqS8cfxhnY4n7mjiETsR2mKsaz/DiFk9xZ55q+pole24E+\
a5QufOSgqN3mBpn1esaiiNwdJ2qOjfofE5d/dpwIQFJfZfx7Iphgu4vIjCGk8IyAIX8HQ9RpF0ajQ/\
vtb7Arj6MfY5LXSTyIT/BlCYafMHh5hDY4jHF+0J+YjtMuGCkSVsLLd+1938AFVxQRQ==", 4 -> 
       "OEM6eJylVm1PG0cQ7oF5c2gKTdM2VaVuUaR+caCfEyUSGAquTJSyTqoKobK+\
m7O37O2edvcM7j/ov+hP7cy9GJ8xSdxISPh2ZmefmefZmY0Dt96DG38ovIgfu0ZXOs//\
6hkWWhAemGARaCf9mCUiZX3hIGJGMz8EprOkD5aZmJkwzKwFHYKjTxDhkDlP26VmY5NZFmF4B75FXy\
wUmmUO8iBx4BptUAr/rx2YmxzGknvQgyRVGACX8LNAtXkM5gR/mIEVCf8mFaEC/\
9xCvFczPKB0ziDuSn3Ff2VxpkMvETJC+d2oGF1YV+hBJgawy07Awk+\
OISC4EXgkEP6huZ7gjAzClO45a8bLH0QaFEjn5bTitg7HWiQyPDVRpqbd3faxMn2hLoX3WDmInj7Fw\
Ks9MSCnxt1YgVs9M9dkXJscWK0s3VlZLsvXIA548HLK1ChNDzkkQnsZdpLUWM+Dc/7dTir8cM+\
bPeJvr+RvN3SjHR5c8OAFD5r491Enr+\
ZacPPPLmGdz9m3vK8UD1p8bYdTgPsObszVx9yIEyStOcbP20YZ+\
0upF7707BXf2iF6wQqfWTgVaQ5hvT0Uvm0i4CsdnWaeMj9DSl3zQIRXA2syHWH4jWMrxl0YgWoH+\
PnF0Qi0PxE6UmCR2wo2aYh2H4ISY4j45qnBu3GkPSozQuOXbYOkYMijm9SCcwgNo638lkmgWq+\
8BohcBYFvlxK/JIx9Y64uXeO10RCvUMJ8nPSN4j/ccap+7Bepb+/nSqQcDzLvjXYkv1K/8+\
T6mXt4NBIqE7Sd5Mr/CYhX9pLVpXV+v6wuXjSbBT24iwznSH+\
LldyTdZrf88K1xWqksWev2CxlF3ytzHdC1Oop+KGJePONBXT2cgQT28M3wrmcK3dorrXb2M+\
8STCxcOKyeevyNnWNns1ghkX3qHbZ32FpwGGVKsbLOCiDgdSD/\
IMi7DtnQpkXccLoFpWzZ7i36Nkbp8CfdLSSGjokERESeCIqbxLVpk1aqbrcdP41kFtvtRMjiN4JK0W\
fMNzfkfjjSvUHyoRXVdfDSzO9PO8qFALk3zc7xdgI0ZmJvhlBi1nAKCFOgY/\
ure9tTF9XYIoKTUBObux78P3MrqUf5gixqJlQjM5h3tQGGIulwrHRW2xyzfbXJ1Oza8ZUm179qenla\
GRGhEfmnjVYOSLdYteAc8yTKspSqyzR+E97ITXqJ18tL1nmaGGhqfaJvftT6FnbbTYXrPr/eS/\
8Obfi5VuIijf1GiplIK3zTNhBlmBDoF3kpjA8PSWqLoVtf9Hnzsw4+nYKf91SS+DfgJm0wk+\
CRfizHZHWUmtGki4iicRY5kKhSA8ffuEhEX+Uj6MwwyIm8u+iNKkyeD8yi78t64+ZiCKKWMBBMBm+\
CoVbpAQbnYT6Fx7Av5pK/3a1lvpSa5HY6yiCM+yQwB/\
VlVEs1iKvFgQughwDdUUflKshv12txS9EhrfUGlVcUUyOuuMAK1ecrfJtRAXZc/\
V1kd0E2JXG56qM8xerxscAuo8nNOCgQjgCefvxPxoOF80=", 5 -> 
       "OEM6eJy9VdFqE0EUJTFg2YKgqC8iXPPSlxjbQl+\
qLdhItRCDdIMipdDb3bu7QyYzy8xs0kg/Q//AD/\
XObNK0tigU2qdlZu7MOXPuObNZw64M6cx9QIfZY9vqC+\
viz0MNiSF0BAgpKSvcDMZYwilaSkErcAVBoivlQGdAmBQgdYJOaNWBma4gQQWVpVCXNWyrR1Ly9+\
GePgtITbs6pHEpGYKneFgDP/lI+pByPuYryoq+\
SO3ilyUmkty2oezNDcurnv0hZX2hRvHvJmSVSjwPEAq+aZkZHEMfVV5hTl34RIbWLDA7OkPGJ8+/\
0NML0qkG4bajaKML+8JY1wHG9jusrcYUygqceF0cntbbFzcHhWPyZ6f+\
2sKwQMaQLbVKhcpruWwXvs+RDJW8SiyhK4SFlGVhFE+\
NsXQi5mpOC6YcdBzRjJfng5tBYeJ1WVYtMPe1WVx4G6LswX8b0qgb4hvjK+\
P85G8to0B4B96dtwc05VuZURte78LG+\
noH2j2UItNGCQyTm2GSO4W2Ltry432pjUjriq3189230YkHPKwk2WgPk1FumH9qWwOtKH7eK9D1dEo\
HSgpFC7bxo8X8e+77hP5xwotoswsDtsvSoxcuv0eTrnIyvCFCNpp2JXYz6QHilpc0bg4P4p+\
NyybowtA75MLZUyElYOX0mJcTlHIGOSky9U18TqfCFdx81hcsF3i0K9Gd20TUoytQ84Rcz8StfNO57\
pvr8hz5ex/fcfN/NaKgYhDvxsetTlqKZkSmFs9eCmkh8iLMX01xUlnug/\
hR5w3LktCgSsLD4GfCqzmbd3yCRujKgi691kH/e/Td024UDbTzTJEfHR0e6HvE13XsFLEPMUnIWk/\
Ci8Q7c4NlIRLwBKA+\
tAsHWdiRarXm6mdXOBbNOvY8pcsUS42pX2KhyVubrcxq38KuzwZMzh61l4Tmu+\
7Ol1vt4xNuTJ8c8P9lpDh3IrsklJpx8I3z3uOcMlnvrld/AA0UrGI="|>, "PageCount" -> 5, 
     "CurrentPage" -> 5|>|>,
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.91009958816197*^9, 
  3.9100996034505453`*^9}},ExpressionUUID->"b81fd0f9-f8e9-45a0-911e-\
3ddae2d2f85b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JobData", " ", "=", " ", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\</Users/ISHIKA GUPTA/Desktop/MSBA Subjects/Data \
Storytelling/BDI/job_cleaned_new.csv\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.910098707323428*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"26413a84-87fe-4ca7-b951-6776ed453c51"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          6697995098943696112620853695898340972306549789570248374552], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[{
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[560.], 
               TypeSystem`PackageScope`AtomShape[560.], 
               TypeSystem`PackageScope`AtomShape[105.], 
               TypeSystem`PackageScope`AtomShape[150], 
               TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
               TypeSystem`PackageScope`AtomShape[34]}], 
             DirectedInfinity[1], 8, {All}]], 20, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Tuple[{
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "Contract", "Full-time", "Internship", "Other", "Part-time", 
               "work_type"]], 
             TypeSystem`Atom[
              Entity["AdministrativeDivision"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer]}], 452], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[{
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[560.], 
               TypeSystem`PackageScope`AtomShape[560.], 
               TypeSystem`PackageScope`AtomShape[105.], 
               TypeSystem`PackageScope`AtomShape[150], 
               TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
               TypeSystem`PackageScope`AtomShape[34]}], 
             DirectedInfinity[1], 8, {All}]], 20, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
           TypeSystem`Tuple[{
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "Contract", "Full-time", "Internship", "Other", "Part-time", 
               "work_type"]], 
             TypeSystem`Atom[
              Entity["AdministrativeDivision"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Integer]}], 452], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 8, 
         "DataRowCount" -> 452, "DataColumnCount" -> 8, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["job_title", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["description", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["work_type", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["experience_level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757934320"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1997035"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst Sr - Hybrid Nasville", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Duties And Responsibilities\n\n\n\nBelow is a list of \
responsibilities that\[LongDash]while not comprehensive\[LongDash]provides an \
overview of the duties of the Evidence Coordinator within the Office of \
Evidence and Impact in an interim capacity (through September 30, 2024):\n \
\[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Contract", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Tennessee, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757907564"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1680"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Cognizant Technology Solutions is seeking a \
\[OpenCurlyDoubleQuote]Business Analyst\[CloseCurlyDoubleQuote] who could \
join our team of IT professionals in a permanent role. If you meet our \
background requirements and skills and looking for an opportunity to be \
rewarded for your skills and expertise, here is the ideal opportunity for \
you!\n\n\n\n\[OpenCurlyDoubleQuote]Cognizant will not sponsor H-1B or other \
U.S. work authorization, or lawful permanent residence (otherwise known as a \
\[OpenCurlyDoubleQuote]Green Card\[CloseCurlyDoubleQuote]) for this role.\n \
\[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Kentucky, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757744257"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1003064"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst I", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Job Title: Business Analyst I Job Type: Contract Site \
Type: Remote Duration: 6 Months  Job Overview: We are seeking a motivated and \
highly detail-oriented Business Operations Analyst. This contractor will play \
a crucial role in supporting our team's day-to-day operations. This role \
entails a wide range of responsibilities, including creating spreadsheets, \
managing project boards, tracking data, coordinating dates and deliverables, \
drafting newsletters, and mastering proprietary tools.  Job Responsibilities: \
Data Management: Gather, analyze, and evaluate data related to our business \
systems and processes Project Support: Assist in the creation and management \
of project boards using Asana or similar tools. Ensure project milestones and \
deadlines are met Document Creation: Draft and edit internal documents, \
presentations, and newsletters Spreadsheet Development: Create, maintain, and \
update spreadsheets for various purposes, including data tracking, reporting, \
and analysis Proprietary Tool Proficiency: Quickly learn and become \
proficient in using proprietary tools and software systems essential for our \
team's operations Support Business Strategies: Align your work with overall \
business strategies, ensuring that operational tasks contribute to our team's \
success  Job Requirements: Associate's degree in a related field is \
preferred, but not mandatory 1-2 years of relevant experience in business \
operations, administration, or a related area Proficiency in Microsoft Office \
Suite, particularly Excel, and other relevant software Extremely \
detailed-oriented and doesn\[CloseCurlyQuote]t miss any comments Ability to \
draft emails and newsletters Strong communication skills Strong attention to \
detail (non-negotiable) and excellent organizational skills Familiarity with \
commonly-used concepts, practices, and procedures within the tech industry \
Ability to work independently and collaboratively in a fast-paced environment \
Exceptional communication and interpersonal skills Eagerness to learn and \
adapt to new tools and technologies", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Contract", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757743031"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["82090049"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "IT Business Analyst - Manufacturing IT Operations (Onsite) \
at LOTTE Biologics", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "We are LOTTE Biologics! A new company, built on 80 years \
of tradition!\n\n\n\nWe embody our core values of being Inspired by Science, \
Embracing Diversity, Fostering Talent, and Connecting Lives. Our mission is \
to be the most trusted partner in the industry, with high standards of \
quality and continuous innovation, to reliably deliver benefits for patients \
worldwide.\n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"New York, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757740566"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4896"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Business Analyst, Senior (Short Term Employment)", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Job Description\n\n\n\nYour Role\n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757737142"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["82090049"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Associate IT Business Analyst, Manufacturing IT Operations \
(Onsite) at LOTTE Biologics", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "We are LOTTE Biologics! A new company, built on 80 years \
of tradition!\n\n\n\nWe embody our core values of being Inspired by Science, \
Embracing Diversity, Fostering Talent, and Connecting Lives. Our mission is \
to be the most trusted partner in the industry, with high standards of \
quality and continuous innovation, to reliably deliver benefits for patients \
worldwide.\n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"New York, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Entry level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757729208"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["45716"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Seaware Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Overview\n\n\n\nAwarded World\[CloseCurlyQuote]s Best \
Small Ship Cruise line, Windstar Cruises is known for intimate yacht style \
experience and unique voyages to the world\[CloseCurlyQuote]s best small \
ports and hidden harbors. Its three sailing yachts and three all-suite yachts \
carry just 148 to 342 guests and cruise around the world.\n \
\[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Florida, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757719906"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["29023961"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst, Senior", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "The Senior Business Analyst, will work in strong \
collaboration with various stakeholders on the US team including but not \
limited to Risk, Front Office, IT, Accounting, Settlements and Portfolio \
Management as well as Paris-office. The role requires a strong collaboration \
as well with the Gemstone-Orchestrade teams based in Europe. During the \
project phase, the candidate will be part of the global working on the \
deployment of Orchestrade worldwide.\n\n\n\nReporting to the IT Architecture \
Director, this position sits in Houston, TX is eligible for a hybrid work \
schedule.\n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 5},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Texas, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 6},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 7},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 8},
                     "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757702681"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2756411"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "\|01f31f Grayce\[Ellipsis]\[Ellipsis] Our Mission is Your \
Success \|01f31f   Recent college graduate with work or internship experience \
in Business Analysis? Grayce wants to hear from you!  \n\nJob Position: \
Business Analyst - Business Skills Development Program Location: Connecticut, \
USA Starting Salary: $52,500  \n\nAre you a college graduate with a \
background in BA? Are you ready to fast-track your professional growth? Look \
no further! We are looking for those with a passion for change and the \
experience to make it happen from the get-go! \n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Connecticut, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Associate", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757494342"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "MUST HAVES: Bachelor degree in related field5+ years of \
experience as a Business AnalystExperience writing user stories Agile and \
waterfall experience  Plusses:Finance or accounting backgroundServiceNow or \
Workflow FIS (cash management) Accounts payable experienceJDE experienceAny \
relevant certifications   Day to day:This Business Analyst will be \
responsible for understanding and executing the strategic direction of the \
Financial Applications in the Corporate Domain. The Business Analyst will be \
responsible for translating that direction into product roadmaps, user \
stories, product specifications, diagrams and more. This role is responsible \
for collaborating with various business, technology and operations team \
members and leaders to help collect and analyze business requirements and \
outcomes to focus product strategy and direction within the organization.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Florida, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757493253"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["164182"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Business analystChicago, ILOnsite/Hybrid We are seeking an \
experienced Business Analyst with 5 to 10 years of expertise to join our \
team. The ideal candidate will play a pivotal role in bridging the gap \
between business needs and technology solutions, enabling our organization to \
make informed decisions and achieve its objectives.Qualifications:Bachelor\
\[CloseCurlyQuote]s degree in business administration, Information \
Technology, or a related field.5 to 10 years of experience as a Business \
Analyst in a corporate or IT environment.Proficiency in business analysis \
methodologies, tools, and techniques.Strong analytical and problem-solving \
skills.Excellent communication and interpersonal skills.Ability to work \
collaboratively with cross-functional teams and diverse \
stakeholders.Knowledge of data analysis and visualization tools (e.g., Excel, \
Tableau, Power BI) is a plus.Relevant certifications (e.g., CBAP, CCBA, \
PMI-PBA) are advantageous.  Key Responsibilities:\[CenterDot] Requirement \
Elicitation and Analysis:Collaborate with stakeholders to gather and document \
business requirements, objectives, and constraints.Analyze and prioritize \
requirements to determine their impact on business processes and technology \
solutions.\[CenterDot] Process Improvement:Evaluate and optimize existing \
business processes to enhance efficiency, reduce costs, and improve overall \
performance.Recommend and implement process improvements and best practices.\
\[CenterDot] Solution Design and Evaluation:Work closely with the development \
and technology teams to design and evaluate potential solutions to meet \
business requirements.Define and document system specifications, user \
stories, and acceptance criteria.\[CenterDot] Data Analysis:Perform data \
analysis to understand trends, patterns, and insights that can inform \
decision-making.Develop data models, reports, and dashboards to support \
business objectives.\[CenterDot] Stakeholder Communication:Communicate \
effectively with business stakeholders and technology teams to ensure \
alignment on project goals and progress.Present findings and recommendations \
to both technical and non-technical audiences.\[CenterDot] Testing and \
Quality Assurance:Define test scenarios, cases, and plans to ensure that \
solutions meet business requirements.Participate in testing activities and \
coordinate user acceptance testing (UAT).\[CenterDot] Change Management and \
Training:Support change management efforts by assisting in the development of \
training materials and providing end-user training.Ensure smooth adoption of \
new processes and technologies.\[CenterDot] Documentation and \
Reporting:Create and maintain comprehensive documentation of business \
requirements, processes, and solutions.Generate reports and updates to track \
project status and performance.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Illinois, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757491010"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["166364"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Sr. Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Responsibilities:\n\nResearch and analyze new technologies \
and recommend appropriate solutions.Develop innovative, efficient, effective, \
and scalable solutions.Develop and communicate technical requirements, \
including design, build, and test plans.Work with the project manager and \
business managers to develop project scope and timeline.Create and provide \
detailed project requirements to third-party developers then guide proper \
testing and implementation.Develop, maintain, and document project \
plans.Identify, quantify, and document business process \
improvements.Identify, analyze, and document user interface issues.Identify, \
validate, and mitigate technology risks.Analyze and interpret user \
requirements, user stories, use cases, and system architecture \
documents.Create user documentation including process flows, roles and \
responsibilities, and use cases.Participate in design and testing activities, \
review code, and participate in system implementations.Perform data \
validation checks.Develop and maintain detailed documentation of business \
processes, policies, and procedures.\n\nQualifications: Bachelor\
\[CloseCurlyQuote]s degree in information systems, business, or a related \
field10 cumulative years of software development experience or exposure2+ \
years of work experience in a technical support role3+ years working with ERP \
SystemsAdvanced technical knowledge of Dynamics, NetSuite, or bothRobust \
experience with MS Office, including intermediate Excel skills and working \
knowledge of Visio or other process visualization tools.Understanding of \
business operations, purchasing, inventory management, planning, and finance \
preferred", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Florida, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Associate", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757489530"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["13242175"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst II", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Title \[Dash] Business Analyst II Location \[Dash] \
Houston, TX, 77010Tenure \[Dash] 6+ months contract with possibility of \
extension or conversion to full-timeShift \[Dash] Hybrid Monday through \
Friday (8:00AM \[Dash] 4:30PM) Responsibilities:The Procurement Analyst is \
responsible for providing support to LyondellBasell\[CloseCurlyQuote] s \
Global Procurement (GP) function with primary focus on Ariba Sourcing and \
Contracts. The Analyst will assist with the overall Ariba/SAP alignment with \
commodity strategies. The position will partner with various areas within \
LyondellBasell Procurement including Technical Services, Technical Materials, \
Field Procurement, Corporate Services and IT The Analyst will also assist in \
supporting efforts of testing and training, as required, to ensure seamless \
implementation within LyondellBasell\[CloseCurlyQuote]s SAP and Ariba \
environment. Additionally, the Analyst will be responsible for providing \
operational assistance as required to support procurement activities. \
Critical to the role is the ability to demonstrate self-sufficiency, and \
assist with projects. ROLES AND RESPONSIBILITIES: Activities may include, but \
are not limited to:Configures and manages business rules for LyondellBasell\
\[CloseCurlyQuote] s Ariba Network accountProvides direct involvement, as \
required, for Ariba Contract Management processes.Reinforces Supplier \
Enablement program compliance with identified suppliers and internal \
stakeholdersProvides Global Support to S2P end-usersCoordinates supplier \
enablement efforts internally and externally with suppliersAssist in learning \
software applications such as SAP, Ariba, GAPS and ISNetworldSupport Global \
internal mailboxSupport Outline Agreement Management EDUCATION AND KEY \
REQUIREMENTS:Bachelor's degree preferred. Degree in Business or Management \
Information Systems is preferred.2+ years related experienceKnowledgeable in \
transactional purchasing system catalogues (Ariba Catalogue experience \
strongly preferred)Knowledge in SAP MM moduleProficient in the use of \
Microsoft Office programsExcellent verbal, written skills and presentation \
skillsBase understanding of Procurement operational processes, classroom \
facilitation and Supplier relationship managementAbility to effectively work \
with stakeholders of varying levels, both internal and external to the \
Company", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Contract", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Texas, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757485275"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3715022"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Business Analyst \[Dash] Microsoft AX / D365 (Finance)", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "This is a 100% remote position based remote anywhere in \
the US or Puerto Rico.\n\nOur client, an established company with a 30-year \
track record of delivering Microsoft D365 ERP solutions is looking for a D365 \
Business Analyst to support their client\[CloseCurlyQuote]s finance function \
through business processes definition, analysis of business problems, \
analytics, and implementation of technical solutions based on Microsoft AX or \
D365 Finance ERP systems. This role requires someone with a deep \
understanding of the intersection of internal finance business needs and \
technology to readily engage in issue resolution and investigation for \
complex financial and operational challenges related to integration and \
reporting.\n\nResponsibilities: Participate in all phases of the Solution \
Delivery Life Cycle (SDLC) including planning, requirements definition, \
solution design, test execution, and implementation of business \
applications.Plan the business analysis effort, contribute to how \
requirements will be managed, and review deliverables with the project team \
and business stakeholders for quality and consistency.Work with clients to \
gather system requirements and produce detailed requirements and functional \
specification documents to solve moderately complex problems within ERP \
information systems.Analyze business and user needs, document requirements, \
and revise existing system logic difficulties as necessary.Documents \
\[OpenCurlyQuote]as-is\[CloseCurlyQuote] and \[OpenCurlyQuote]to-be\
\[CloseCurlyQuote] business process diagrams within accurate and detailed \
scoping documents.Translate requirement specifications into application \
configurations for applications and systems.Validate, analyze, and import \
initial and final data as approved by the customer.Work closely with the \
development team to ensure requirements are fully understood and provide \
assistance to overcome obstacles faced during development.Document reports \
design and specifications for custom reports development or modification. \
Provide support to the development team during development and \
testing.Design, develop, and execute comprehensive test plans and test cases \
for user acceptance and ensure quality standards.Create user training \
documents, schedule, and deliver user training identifying key power \
usersConsult and liaise with client stakeholders during critical phases of \
the project (assess, develop, and deploy)\n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757477139"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["52136858"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Business Analyst / Requirements Analyst \[Dash] Remote | \
974438", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "OUR GOAL:Treat our consultants and clients the way we \
would like others to treat us!\n\n\n\nInterested in joining our team? Check \
out the opportunity below and apply today!\n \[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757471775"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["11056"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Kronos Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Must-haves Advanced knowledge and skills within Kronos/UKG \
software systemExperience with Configuration, customizing, and optimizing the \
Kronos SystemExperience setting up workflows, rules, permissions, reports, or \
integrationsExperience providing tech support and guidance to Kronos users \
and clientsExperience training and documenting Kronos best practices\n\n\
DESIRED SKILLS:A Kronos Super User, not just Kronos supportNot someone who \
can just support users or clients with Kronos but someone who can set up and \
manage the Kronos system. Day-to-Day NHS is seeking a Kronos subject matter \
expert (SME) to help optimize their workforce and payroll management. They \
will be responsible for:Configuring, customizing, and optimizing the Kronos \
system according to the needs and preferences of NHS. Setting up workflows, \
rules, permissions, reports, or integrations for the Kronos systemProviding \
technical support and guidance to Kronos users and clientsTroubleshooting and \
resolving Kronos issues or difficultiesTraining and documenting Kronos best \
practices and proceduresCollaborating with HR and payroll staff and other \
stakeholders to ensure Kronos compliance and accuracy", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Contract", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Alabama, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757470895"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5938516"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Senior Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Large investment bank is seeking a Business Analyst for \
work on the new T+1 settlement cycle regulations.Location: New York, \
NYHybrid: 1 day in officeContract: 6 -12 months (convert to FTE based on \
performance)\n\nMust Have Skills:Business Analyst within Trading systems & \
Middle office experienceExperience working with T+1 settlement \
cycle.Experience with Test messaging upstreamFIX messagingKnowledge of \
Equities, Fixed Income and Asset classesKnowledge of Trade allocations \
\[Dash] and how it worksBroadridge settlement systems \[Dash] ICI and BPS\n\n\
Soft Skills:Strong attention to detailProblem-solving skillsStrong verbal and \
written communication skills", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Contract", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757469541"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2875"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "NOTE:This position is with one of our Direct Banking \
client in Getzville, NY and will be 3 Days/ Week Onsite.This will be 12 \
Months of contract and will be possibility of extension or conversion. \n\n\
Qualifications:Proficient in Excel and PowerPoint.5+ years\[CloseCurlyQuote] \
experience in Business Analysis.Subject matter expertise across data \
analytics and project management.Articulate and effective communicator, both \
verbal and written.Strong interpersonal skills, with evidence of working in \
collaboration across large, complex organizations, including communicating \
issues/requests.", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Contract", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"New York, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3757467705"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    1}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["10346153"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    2}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Trading IT Business Analyst", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    3}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "Job description:\n\n\n\nUniper seeks a Trading IT Business \
Analyst to join its North American teamThe Business Analyst will work as a \
member of the IT team in North America providing day to day direction and \
leadership across the analytical community, as well as acting as a recognized \
subject matter expert regarding the Energy industry and the applications used \
within Uniper Global Commodities North America (UGCNA). The candidate will \
play a key role in supporting the Trading business users, be expected to \
interface with various groups within Uniper, and manage projects from \
inception to completion and be an integral part of the implementation.Further \
responsibilities may include:Identify issues and opportunities to proactively \
help deliver value added solutions to the businessAnalyze requirements and \
data from various groups within Uniper and transform into improved \
solutionsPrepare cost estimates and project timelines for completing \
recommended solutionsOwn technical approach, plan and delivery for changes of \
all sizesActively identify, report, promote, own and implement system \
improvement ideasPlay a key role in building a partnership with the business \
and key stakeholdersAct as a technical leader by utilizing expert knowledge \
and understanding of Trading applications and technologies to provide a \
tactical and strategic vision aligned with other Uniper IT teams\n \
\[DescendingEllipsis]", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    4}, "Item", False], "Mouse"], 
                  ImageSize -> {{560., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Full-time", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    5}, "Item", False], "Mouse"], 
                  ImageSize -> {{105., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["\"Texas, United States\""], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    6}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Mid-Senior level", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    7}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    8}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 452, 1], {1, 452 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 452, 1], {1, 452 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[452, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[452, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 452, 1], {1, 452 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 452, 1], {1, 452 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         2305.6000000000004`, {1140.3974364393396`, 1146.7025635606612`}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        2305.6000000000004`, {1140.3974364393396`, 1146.7025635606612`}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 6697995098943696112620853695898340972306549789570248374552,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.910098722752552*^9, 3.910100957545929*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"5b60c4f9-3b1d-4644-a3a1-acdab15bbfc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"locations", "=", 
  RowBox[{"JobData", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "\"\<location\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91009926062576*^9, 3.91009930396735*^9}, {
  3.910101211893535*^9, 
  3.910101228027221*^9}},ExpressionUUID->"bf17a205-e0fb-4ae4-9213-\
38938edaab76"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Part location is not applicable to expressions of the \
form {_Integer, _Integer, _String, _String, \\\"Contract\\\" | \
\\\"Full-time\\\" | \\\"Internship\\\" | \\\"Other\\\" | \\\"Part-time\\\" | \
\\\"work_type\\\", Entity[\\\"AdministrativeDivision\\\", _], \\\"Associate\\\
\" | \\\"Director\\\" | \\\"Entry level\\\" | \\\"Executive\\\" | \
\\\"experience_level\\\" | \\\"Internship\\\" | \\\"Mid-Senior level\\\", \
_Integer}.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Dataset", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Part location is not applicable to expressions of the \
form {_Integer, _Integer, _String, _String, \\\"Contract\\\" | \
\\\"Full-time\\\" | \\\"Internship\\\" | \\\"Other\\\" | \\\"Part-time\\\" | \
\\\"work_type\\\", Entity[\\\"AdministrativeDivision\\\", _], \\\"Associate\\\
\" | \\\"Director\\\" | \\\"Entry level\\\" | \\\"Executive\\\" | \
\\\"experience_level\\\" | \\\"Internship\\\" | \\\"Mid-Senior level\\\", \
_Integer}.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Dataset", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  Dataset, <|
   "MessageTemplate" :> MessageName[Dataset, "partnotapplicable"], 
    "MessageParameters" -> <|"Type" -> TypeSystem`Tuple[{
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Contract", "Full-time", "Internship", "Other", "Part-time", 
           "work_type"]], 
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Associate", "Director", "Entry level", "Executive", 
           "experience_level", "Internship", "Mid-Senior level"]], 
         TypeSystem`Atom[Integer]}], "Part" -> "location", "Symbol" -> 
      Part|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9100992937150354`*^9, 3.9100993060761757`*^9}, 
   3.910100964716775*^9, 3.910101215380104*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"aac18c02-cf84-4b3e-af59-aeba76fb8938"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationCount", "=", 
  RowBox[{"Counts", "[", 
   RowBox[{"JobData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9100993434730463`*^9, 3.9100993461771793`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"f8484e74-def0-4f5f-819c-8fcfefc8294e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Missing["Unrecognized", "location"] -> 1, 
       Entity["AdministrativeDivision", {"Tennessee", "UnitedStates"}] -> 9, 
       Entity["AdministrativeDivision", {"Kentucky", "UnitedStates"}] -> 2, 
       Missing["Unrecognized", "United States"] -> 109, 
       Entity["AdministrativeDivision", {"NewYork", "UnitedStates"}] -> 20, 
       Entity["AdministrativeDivision", {"Florida", "UnitedStates"}] -> 21, 
       Entity["AdministrativeDivision", {"Texas", "UnitedStates"}] -> 41, 
       Entity["AdministrativeDivision", {"Connecticut", "UnitedStates"}] -> 6,
        Entity["AdministrativeDivision", {"Illinois", "UnitedStates"}] -> 16, 
       Entity["AdministrativeDivision", {"Alabama", "UnitedStates"}] -> 2, 
       Missing["Unrecognized", "New York City Metropolitan Area"] -> 10, 
       Entity["AdministrativeDivision", {"California", "UnitedStates"}] -> 48,
        Entity["AdministrativeDivision", {"Massachusetts", "UnitedStates"}] -> 
       8, Entity["AdministrativeDivision", {"Maryland", "UnitedStates"}] -> 4,
        Entity["AdministrativeDivision", {"Arkansas", "UnitedStates"}] -> 1, 
       Entity["AdministrativeDivision", {"Washington", "UnitedStates"}] -> 15,
        Entity["AdministrativeDivision", {"Ohio", "UnitedStates"}] -> 7, 
       Entity["AdministrativeDivision", {"Utah", "UnitedStates"}] -> 3, 
       Entity["AdministrativeDivision", {"NewJersey", "UnitedStates"}] -> 9, 
       Entity["AdministrativeDivision", {"Nebraska", "UnitedStates"}] -> 2, 
       Entity["AdministrativeDivision", {"NorthCarolina", "UnitedStates"}] -> 
       15, Entity[
        "AdministrativeDivision", {"DistrictOfColumbia", "UnitedStates"}] -> 
       3, Entity["AdministrativeDivision", {"SouthCarolina", "UnitedStates"}] -> 
       3, Entity["AdministrativeDivision", {"Wisconsin", "UnitedStates"}] -> 
       3, Entity["AdministrativeDivision", {"Virginia", "UnitedStates"}] -> 
       14, Missing["Unrecognized", "Tallahassee Metropolitan Area"] -> 1, 
       Missing["Unrecognized", "Los Angeles Metropolitan Area"] -> 1, 
       Missing["Unrecognized", "New York Metropolitan Area"] -> 1, 
       Missing["Unrecognized", "Cincinnati Metropolitan Area"] -> 1, 
       Entity["AdministrativeDivision", {"Pennsylvania", "UnitedStates"}] -> 
       4, Entity["AdministrativeDivision", {"Missouri", "UnitedStates"}] -> 4,
        Missing["Unrecognized", "Buffalo-Niagara Falls Area"] -> 1, 
       Entity["AdministrativeDivision", {"Michigan", "UnitedStates"}] -> 5, 
       Missing["Unrecognized", "Oklahoma City Metropolitan Area"] -> 1, 
       Missing["Unrecognized", "Greater St. Louis"] -> 1, 
       Entity["AdministrativeDivision", {"Indiana", "UnitedStates"}] -> 2, 
       Missing["Unrecognized", "Greater Pittsburgh Region"] -> 1, 
       Entity["AdministrativeDivision", {"Maine", "UnitedStates"}] -> 2, 
       Missing["Unrecognized", "Texas Metropolitan Area"] -> 1, 
       Entity["AdministrativeDivision", {"Oregon", "UnitedStates"}] -> 5, 
       Entity["AdministrativeDivision", {"Hawaii", "UnitedStates"}] -> 1, 
       Entity["AdministrativeDivision", {"Colorado", "UnitedStates"}] -> 4, 
       Entity["AdministrativeDivision", {"Georgia", "UnitedStates"}] -> 14, 
       Missing["Unrecognized", "Greater Minneapolis-St. Paul Area"] -> 1, 
       Entity["AdministrativeDivision", {"Oklahoma", "UnitedStates"}] -> 2, 
       Missing["Unrecognized", "San Francisco Bay Area"] -> 7, 
       Missing["Unrecognized", "Utica-Rome Area"] -> 1, 
       Entity["AdministrativeDivision", {"NewMexico", "UnitedStates"}] -> 1, 
       Entity["AdministrativeDivision", {"Minnesota", "UnitedStates"}] -> 2, 
       Entity["AdministrativeDivision", {"Idaho", "UnitedStates"}] -> 1, 
       Entity["AdministrativeDivision", {"Delaware", "UnitedStates"}] -> 2, 
       Missing["Unrecognized", "Charlotte Metro"] -> 2, 
       Missing["Unrecognized", "Atlanta Metropolitan Area"] -> 3, 
       Entity["AdministrativeDivision", {"Arizona", "UnitedStates"}] -> 4, 
       Missing["Unrecognized", "NAMER"] -> 1, 
       Missing["Unrecognized", "San Diego Metropolitan Area"] -> 1, 
       Missing["Unrecognized", "Dallas-Fort Worth Metroplex"] -> 1, 
       Entity["AdministrativeDivision", {"RhodeIsland", "UnitedStates"}] -> 
       1|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[150], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["AdministrativeDivision"]], 
       TypeSystem`Atom[Integer], 58], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[150], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["AdministrativeDivision"]], 
       TypeSystem`Atom[Integer], 58], "Path" -> {}, "DisplayedRowCount" -> 20,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 58, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 29, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "Cincinnati Metropolitan Area"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Cincinnati Metropolitan Area"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Cincinnati Metropolitan Area"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Pennsylvania, United States\""], 
                  Style[
                   RawBoxes["\"Pennsylvania, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "Pennsylvania", "UnitedStates"}]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {
                   "Pennsylvania", "UnitedStates"}]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {
                   "Pennsylvania", "UnitedStates"}]]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Missouri, United States\""], 
                  Style[
                   RawBoxes["\"Missouri, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Missouri", "UnitedStates"}]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Missouri", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Missouri", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "Buffalo-Niagara Falls Area"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Buffalo-Niagara Falls Area"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Buffalo-Niagara Falls Area"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Michigan, United States\""], 
                  Style[
                   RawBoxes["\"Michigan, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Michigan", "UnitedStates"}]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Michigan", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Michigan", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing[
                    "Unrecognized", "Oklahoma City Metropolitan Area"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing[
                  "Unrecognized", "Oklahoma City Metropolitan Area"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing[
                  "Unrecognized", "Oklahoma City Metropolitan Area"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "Greater St. Louis"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Greater St. Louis"]]}, "RowHeader",
                 False], "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Greater St. Louis"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Indiana, United States\""], 
                  Style[
                   RawBoxes["\"Indiana, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Indiana", "UnitedStates"}]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Indiana", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Indiana", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "Greater Pittsburgh Region"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Greater Pittsburgh Region"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Greater Pittsburgh Region"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Maine, United States\""], 
                  Style[
                   RawBoxes["\"Maine, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Maine", "UnitedStates"}]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Maine", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Maine", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "Texas Metropolitan Area"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Texas Metropolitan Area"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Texas Metropolitan Area"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Oregon, United States\""], 
                  Style[
                   RawBoxes["\"Oregon, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Oregon", "UnitedStates"}]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Oregon", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Oregon", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Hawaii, United States\""], 
                  Style[
                   RawBoxes["\"Hawaii, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Hawaii", "UnitedStates"}]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Hawaii", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Hawaii", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Colorado, United States\""], 
                  Style[
                   RawBoxes["\"Colorado, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Colorado", "UnitedStates"}]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Colorado", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Colorado", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Georgia, United States\""], 
                  Style[
                   RawBoxes["\"Georgia, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Georgia", "UnitedStates"}]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Georgia", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Georgia", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing[
                    "Unrecognized", "Greater Minneapolis-St. Paul Area"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing[
                  "Unrecognized", "Greater Minneapolis-St. Paul Area"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing[
                  "Unrecognized", "Greater Minneapolis-St. Paul Area"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Oklahoma, United States\""], 
                  Style[
                   RawBoxes["\"Oklahoma, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {"Oklahoma", "UnitedStates"}]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Oklahoma", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"Oklahoma", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "San Francisco Bay Area"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "San Francisco Bay Area"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "San Francisco Bay Area"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["\[LongDash]", 
                   GrayLevel[0.75]], 
                  Style[
                   Style["\[LongDash]", 
                    GrayLevel[0.75]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Missing["Unrecognized", "Utica-Rome Area"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Utica-Rome Area"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Missing["Unrecognized", "Utica-Rome Area"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"New Mexico, United States\""], 
                  Style[
                   RawBoxes["\"New Mexico, United States\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "31caba5c-4825-4eb5-81a5-063b94db02d0"]][{
                    Key[
                    Entity[
                    "AdministrativeDivision", {
                    "NewMexico", "UnitedStates"}]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"NewMexico", "UnitedStates"}]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "31caba5c-4825-4eb5-81a5-063b94db02d0"][{
                 Key[
                  Entity[
                  "AdministrativeDivision", {"NewMexico", "UnitedStates"}]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 58, 1], {1, 58 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 58, 1], {1, 58 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 29, "\[Dash]", 48, " of ", 
                    Style[58, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 29, "\[Dash]", 48, " of ", 
                    Style[58, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 58, 1], {1, 58 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 58, 1], {1, 58 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "31caba5c-4825-4eb5-81a5-063b94db02d0", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "31caba5c-4825-4eb5-81a5-063b94db02d0"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "31caba5c-4825-4eb5-81a5-063b94db02d0"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       252.50000000000003`, {327.39743643933895`, 333.70256356066085`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      252.50000000000003`, {327.39743643933895`, 333.70256356066085`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.91009934905612*^9, 3.910101241784854*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"3eb3f5f5-b5da-4742-a21f-fdf8c8088ced"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LocationCount", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9101038216206064`*^9, 
  3.9101038250679703`*^9}},ExpressionUUID->"e943f5ae-287e-4c73-bdf7-\
9d43b12d2e2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List1", " ", "=", " ", 
  RowBox[{"Flatten", "[", "LocationCount", "]"}]}]], "Input",
 CellChangeTimes->{{3.9100997424551897`*^9, 3.910099751434376*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8eb7325c-cdea-4b32-897d-1ae1754f4269"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Nonatomic expression expected at position \
\\!\\(\\*TagBox[\\\"1\\\", Function[Short[Slot[1], 5]]]\\) in \
\\!\\(\\*TagBox[RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"location\
\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Tennessee, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Tennessee\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Tennessee\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Kentucky, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Kentucky\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Kentucky\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"United \
States\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"109\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"New York, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"NewYork\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"NewYork\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"20\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Florida, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Florida\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Florida\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"21\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Texas, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Texas\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Texas\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"41\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Connecticut, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\
\", RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Connecticut\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Connecticut\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Illinois, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Illinois\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Illinois\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"16\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Alabama, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Alabama\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Alabama\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"48\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}], \
\\\"]\\\"}], Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Flatten", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Nonatomic expression expected at position \
\\!\\(\\*TagBox[\\\"1\\\", Function[Short[Slot[1], 5]]]\\) in \
\\!\\(\\*TagBox[RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"location\
\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Tennessee, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Tennessee\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Tennessee\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Kentucky, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Kentucky\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Kentucky\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"United \
States\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"109\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"New York, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"NewYork\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"NewYork\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"20\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Florida, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Florida\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Florida\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"21\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Texas, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Texas\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Texas\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"41\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Connecticut, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\
\", RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Connecticut\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Connecticut\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Illinois, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Illinois\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Illinois\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"16\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Alabama, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Alabama\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Alabama\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"48\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}], \
\\\"]\\\"}], Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Flatten", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  Flatten, <|
   "MessageTemplate" :> MessageName[Flatten, "normal"], "MessageParameters" -> {
      HoldForm[1], 
      HoldForm[
       Flatten[<|
        Missing["Unrecognized", "location"] -> 1, 
         Entity["AdministrativeDivision", {"Tennessee", "UnitedStates"}] -> 9,
          Entity["AdministrativeDivision", {"Kentucky", "UnitedStates"}] -> 2,
          Missing["Unrecognized", "United States"] -> 109, 
         Entity["AdministrativeDivision", {"NewYork", "UnitedStates"}] -> 20, 
         Entity["AdministrativeDivision", {"Florida", "UnitedStates"}] -> 21, 
         Entity["AdministrativeDivision", {"Texas", "UnitedStates"}] -> 41, 
         Entity["AdministrativeDivision", {"Connecticut", "UnitedStates"}] -> 
         6, Entity["AdministrativeDivision", {"Illinois", "UnitedStates"}] -> 
         16, Entity["AdministrativeDivision", {"Alabama", "UnitedStates"}] -> 
         2, Missing["Unrecognized", "New York City Metropolitan Area"] -> 10, 
         Entity["AdministrativeDivision", {"California", "UnitedStates"}] -> 
         48, Entity[
          "AdministrativeDivision", {"Massachusetts", "UnitedStates"}] -> 8, 
         Entity["AdministrativeDivision", {"Maryland", "UnitedStates"}] -> 4, 
         Entity["AdministrativeDivision", {"Arkansas", "UnitedStates"}] -> 1, 
         Entity["AdministrativeDivision", {"Washington", "UnitedStates"}] -> 
         15, Entity["AdministrativeDivision", {"Ohio", "UnitedStates"}] -> 7, 
         Entity["AdministrativeDivision", {"Utah", "UnitedStates"}] -> 3, 
         Entity["AdministrativeDivision", {"NewJersey", "UnitedStates"}] -> 9,
          Entity["AdministrativeDivision", {"Nebraska", "UnitedStates"}] -> 2,
          Entity["AdministrativeDivision", {"NorthCarolina", "UnitedStates"}] -> 
         15, Entity[
          "AdministrativeDivision", {"DistrictOfColumbia", "UnitedStates"}] -> 
         3, Entity[
          "AdministrativeDivision", {"SouthCarolina", "UnitedStates"}] -> 3, 
         Entity["AdministrativeDivision", {"Wisconsin", "UnitedStates"}] -> 3,
          Entity["AdministrativeDivision", {"Virginia", "UnitedStates"}] -> 
         14, Missing["Unrecognized", "Tallahassee Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Los Angeles Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "New York Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Cincinnati Metropolitan Area"] -> 1, 
         Entity["AdministrativeDivision", {"Pennsylvania", "UnitedStates"}] -> 
         4, Entity["AdministrativeDivision", {"Missouri", "UnitedStates"}] -> 
         4, Missing["Unrecognized", "Buffalo-Niagara Falls Area"] -> 1, 
         Entity["AdministrativeDivision", {"Michigan", "UnitedStates"}] -> 5, 
         Missing["Unrecognized", "Oklahoma City Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Greater St. Louis"] -> 1, 
         Entity["AdministrativeDivision", {"Indiana", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "Greater Pittsburgh Region"] -> 1, 
         Entity["AdministrativeDivision", {"Maine", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "Texas Metropolitan Area"] -> 1, 
         Entity["AdministrativeDivision", {"Oregon", "UnitedStates"}] -> 5, 
         Entity["AdministrativeDivision", {"Hawaii", "UnitedStates"}] -> 1, 
         Entity["AdministrativeDivision", {"Colorado", "UnitedStates"}] -> 4, 
         Entity["AdministrativeDivision", {"Georgia", "UnitedStates"}] -> 14, 
         Missing["Unrecognized", "Greater Minneapolis-St. Paul Area"] -> 1, 
         Entity["AdministrativeDivision", {"Oklahoma", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "San Francisco Bay Area"] -> 7, 
         Missing["Unrecognized", "Utica-Rome Area"] -> 1, 
         Entity["AdministrativeDivision", {"NewMexico", "UnitedStates"}] -> 1,
          Entity["AdministrativeDivision", {"Minnesota", "UnitedStates"}] -> 
         2, Entity["AdministrativeDivision", {"Idaho", "UnitedStates"}] -> 1, 
         Entity["AdministrativeDivision", {"Delaware", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "Charlotte Metro"] -> 2, 
         Missing["Unrecognized", "Atlanta Metropolitan Area"] -> 3, 
         Entity["AdministrativeDivision", {"Arizona", "UnitedStates"}] -> 4, 
         Missing["Unrecognized", "NAMER"] -> 1, 
         Missing["Unrecognized", "San Diego Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Dallas-Fort Worth Metroplex"] -> 1, 
         Entity["AdministrativeDivision", {"RhodeIsland", "UnitedStates"}] -> 
         1|>]]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.910099754828352*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"271773b3-e57e-46b5-bd45-4a86c62ffbba"]
}, Open  ]],

Cell[BoxData[""], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"bdafce66-c295-44ae-a81e-0ca168e7bc03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredList1", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"List1", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Missing\>\"", ",", "_"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9101000138717203`*^9, 3.9101000506818995`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e88d0f14-f5a6-4994-b258-871fb1d89f23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Nonatomic expression expected at position \
\\!\\(\\*TagBox[\\\"1\\\", Function[Short[Slot[1], 5]]]\\) in \
\\!\\(\\*TagBox[RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"location\
\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Tennessee, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Tennessee\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Tennessee\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Kentucky, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Kentucky\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Kentucky\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"United \
States\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"109\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"New York, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"NewYork\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"NewYork\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"20\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Florida, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Florida\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Florida\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"21\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Texas, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Texas\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Texas\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"41\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Connecticut, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\
\", RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Connecticut\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Connecticut\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Illinois, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Illinois\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Illinois\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"16\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Alabama, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Alabama\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Alabama\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"48\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}], \
\\\"]\\\"}], Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Flatten", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Nonatomic expression expected at position \
\\!\\(\\*TagBox[\\\"1\\\", Function[Short[Slot[1], 5]]]\\) in \
\\!\\(\\*TagBox[RowBox[{\\\"Flatten\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"location\
\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Tennessee, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Tennessee\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Tennessee\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Kentucky, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Kentucky\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Kentucky\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"Missing\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Unrecognized\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"United \
States\\\\\\\"\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \\\"109\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"New York, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"NewYork\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"NewYork\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"20\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Florida, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Florida\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Florida\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"21\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Texas, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Texas\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Texas\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"41\\\"}], \\\",\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\
\"Connecticut, United States\\\\\\\"\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\
\", RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Connecticut\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Connecticut\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Illinois, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Illinois\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Illinois\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"UnitedStates\\\\\\\
\\\\\\\\\"}]\\\\\\\"\\\", \\\"\\\\\\\"administrative division\\\\\\\"\\\"], \
\\\"Entity\\\"], \\\"\[Rule]\\\", \\\"16\\\"}], \\\",\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Alabama, United States\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"AdministrativeDivision\\\\\\\"\\\", \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[\\\"\\\\\\\"Alabama\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"UnitedStates\\\\\\\"\\\"]], \\\"}\\\"]]]], \
\\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"AdministrativeDivision\\\\\\\\\\\\\\\", \
{\\\\\\\\\\\\\\\"Alabama\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"UnitedStates\\\\\\\\\\\\\\\"}]\\\\\\\"\\\", \
\\\"\\\\\\\"administrative division\\\\\\\"\\\"], \\\"Entity\\\"], \
\\\"\[Rule]\\\", \\\"2\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"48\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}], \
\\\"]\\\"}], Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Flatten", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  Flatten, <|
   "MessageTemplate" :> MessageName[Flatten, "normal"], "MessageParameters" -> {
      HoldForm[1], 
      HoldForm[
       Flatten[<|
        Missing["Unrecognized", "location"] -> 1, 
         Entity["AdministrativeDivision", {"Tennessee", "UnitedStates"}] -> 9,
          Entity["AdministrativeDivision", {"Kentucky", "UnitedStates"}] -> 2,
          Missing["Unrecognized", "United States"] -> 109, 
         Entity["AdministrativeDivision", {"NewYork", "UnitedStates"}] -> 20, 
         Entity["AdministrativeDivision", {"Florida", "UnitedStates"}] -> 21, 
         Entity["AdministrativeDivision", {"Texas", "UnitedStates"}] -> 41, 
         Entity["AdministrativeDivision", {"Connecticut", "UnitedStates"}] -> 
         6, Entity["AdministrativeDivision", {"Illinois", "UnitedStates"}] -> 
         16, Entity["AdministrativeDivision", {"Alabama", "UnitedStates"}] -> 
         2, Missing["Unrecognized", "New York City Metropolitan Area"] -> 10, 
         Entity["AdministrativeDivision", {"California", "UnitedStates"}] -> 
         48, Entity[
          "AdministrativeDivision", {"Massachusetts", "UnitedStates"}] -> 8, 
         Entity["AdministrativeDivision", {"Maryland", "UnitedStates"}] -> 4, 
         Entity["AdministrativeDivision", {"Arkansas", "UnitedStates"}] -> 1, 
         Entity["AdministrativeDivision", {"Washington", "UnitedStates"}] -> 
         15, Entity["AdministrativeDivision", {"Ohio", "UnitedStates"}] -> 7, 
         Entity["AdministrativeDivision", {"Utah", "UnitedStates"}] -> 3, 
         Entity["AdministrativeDivision", {"NewJersey", "UnitedStates"}] -> 9,
          Entity["AdministrativeDivision", {"Nebraska", "UnitedStates"}] -> 2,
          Entity["AdministrativeDivision", {"NorthCarolina", "UnitedStates"}] -> 
         15, Entity[
          "AdministrativeDivision", {"DistrictOfColumbia", "UnitedStates"}] -> 
         3, Entity[
          "AdministrativeDivision", {"SouthCarolina", "UnitedStates"}] -> 3, 
         Entity["AdministrativeDivision", {"Wisconsin", "UnitedStates"}] -> 3,
          Entity["AdministrativeDivision", {"Virginia", "UnitedStates"}] -> 
         14, Missing["Unrecognized", "Tallahassee Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Los Angeles Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "New York Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Cincinnati Metropolitan Area"] -> 1, 
         Entity["AdministrativeDivision", {"Pennsylvania", "UnitedStates"}] -> 
         4, Entity["AdministrativeDivision", {"Missouri", "UnitedStates"}] -> 
         4, Missing["Unrecognized", "Buffalo-Niagara Falls Area"] -> 1, 
         Entity["AdministrativeDivision", {"Michigan", "UnitedStates"}] -> 5, 
         Missing["Unrecognized", "Oklahoma City Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Greater St. Louis"] -> 1, 
         Entity["AdministrativeDivision", {"Indiana", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "Greater Pittsburgh Region"] -> 1, 
         Entity["AdministrativeDivision", {"Maine", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "Texas Metropolitan Area"] -> 1, 
         Entity["AdministrativeDivision", {"Oregon", "UnitedStates"}] -> 5, 
         Entity["AdministrativeDivision", {"Hawaii", "UnitedStates"}] -> 1, 
         Entity["AdministrativeDivision", {"Colorado", "UnitedStates"}] -> 4, 
         Entity["AdministrativeDivision", {"Georgia", "UnitedStates"}] -> 14, 
         Missing["Unrecognized", "Greater Minneapolis-St. Paul Area"] -> 1, 
         Entity["AdministrativeDivision", {"Oklahoma", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "San Francisco Bay Area"] -> 7, 
         Missing["Unrecognized", "Utica-Rome Area"] -> 1, 
         Entity["AdministrativeDivision", {"NewMexico", "UnitedStates"}] -> 1,
          Entity["AdministrativeDivision", {"Minnesota", "UnitedStates"}] -> 
         2, Entity["AdministrativeDivision", {"Idaho", "UnitedStates"}] -> 1, 
         Entity["AdministrativeDivision", {"Delaware", "UnitedStates"}] -> 2, 
         Missing["Unrecognized", "Charlotte Metro"] -> 2, 
         Missing["Unrecognized", "Atlanta Metropolitan Area"] -> 3, 
         Entity["AdministrativeDivision", {"Arizona", "UnitedStates"}] -> 4, 
         Missing["Unrecognized", "NAMER"] -> 1, 
         Missing["Unrecognized", "San Diego Metropolitan Area"] -> 1, 
         Missing["Unrecognized", "Dallas-Fort Worth Metroplex"] -> 1, 
         Entity["AdministrativeDivision", {"RhodeIsland", "UnitedStates"}] -> 
         1|>]]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.91010005130984*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"0bf58662-d964-4da4-93e6-810ccb3c1ea7"]
}, Open  ]]
},
WindowSize->{1152, 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Chatbook.nb",
ExpressionUUID->"fbe2b229-4706-40e3-b880-2469f4fa1392"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2117, 34, 155, "ChatInput",ExpressionUUID->"b3b86040-d4b2-48b0-a01c-40d0b7ab1104"],
Cell[2700, 58, 27023, 456, 426, "ChatOutput",ExpressionUUID->"12370da4-f20c-4cd3-b518-95fb69ab0c8f"],
Cell[29726, 516, 4368, 73, 256, "ChatOutput",ExpressionUUID->"1a8b7b4d-1877-42b5-a42a-56054a11280b"],
Cell[34097, 591, 30398, 527, 707, "ChatOutput",ExpressionUUID->"ea6f5f7e-7791-4f4c-b042-c36656f24ed2"],
Cell[64498, 1120, 14909, 248, 584, "ChatOutput",ExpressionUUID->"b81fd0f9-f8e9-45a0-911e-3ddae2d2f85b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79444, 1373, 326, 7, 31, "Input",ExpressionUUID->"26413a84-87fe-4ca7-b951-6776ed453c51"],
Cell[79773, 1382, 144599, 2662, 2307, "Output",ExpressionUUID->"5b60c4f9-3b1d-4644-a3a1-acdab15bbfc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224409, 4049, 330, 8, 31, "Input",ExpressionUUID->"bf17a205-e0fb-4ae4-9213-38938edaab76"],
Cell[224742, 4059, 6067, 120, 90, "Output",ExpressionUUID->"aac18c02-cf84-4b3e-af59-aeba76fb8938"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230846, 4184, 331, 7, 31, "Input",ExpressionUUID->"f8484e74-def0-4f5f-819c-8fcfefc8294e"],
Cell[231180, 4193, 84724, 1645, 681, "Output",ExpressionUUID->"3eb3f5f5-b5da-4742-a21f-fdf8c8088ced"]
}, Open  ]],
Cell[315919, 5841, 219, 5, 31, "Input",ExpressionUUID->"e943f5ae-287e-4c73-bdf7-9d43b12d2e2b"],
Cell[CellGroupData[{
Cell[316163, 5850, 256, 4, 31, "Input",ExpressionUUID->"8eb7325c-cdea-4b32-897d-1ae1754f4269"],
Cell[316422, 5856, 20621, 335, 109, "Output",ExpressionUUID->"271773b3-e57e-46b5-bd45-4a86c62ffbba"]
}, Open  ]],
Cell[337058, 6194, 103, 1, 55, "Code",ExpressionUUID->"bdafce66-c295-44ae-a81e-0ca168e7bc03"],
Cell[CellGroupData[{
Cell[337186, 6199, 341, 7, 31, "Input",ExpressionUUID->"e88d0f14-f5a6-4994-b258-871fb1d89f23"],
Cell[337530, 6208, 20620, 335, 109, "Output",ExpressionUUID->"0bf58662-d964-4da4-93e6-810ccb3c1ea7"]
}, Open  ]]
}
]
*)

